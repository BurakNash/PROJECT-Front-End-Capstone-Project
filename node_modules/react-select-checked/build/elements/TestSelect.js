'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactSelect = require('react-select');

var _reactSelect2 = _interopRequireDefault(_reactSelect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GitHubUsers = function (_React$Component) {
    _inherits(GitHubUsers, _React$Component);

    function GitHubUsers(props, context) {
        _classCallCheck(this, GitHubUsers);

        return _possibleConstructorReturn(this, (GitHubUsers.__proto__ || Object.getPrototypeOf(GitHubUsers)).call(this, props, context));
    }

    /**
     * get options async
     */


    _createClass(GitHubUsers, [{
        key: 'getOptions',
        value: function getOptions(input) {
            return fetch('https://api.github.com/search/repositories?q=stars:%3E1+language:javascript&sort=stars&order=desc&type=Repositories').then(function (response) {
                return response.json();
            }).then(function (json) {
                var githubUsers = json.items.map(function (user) {
                    return {
                        label: user.full_name,
                        value: user.name
                    };
                });
                return { options: githubUsers };
            });
        }
    }, {
        key: 'logChange',
        value: function logChange(val) {
            console.log('Selected: ', val);
            console.log('Options: ', this.options);
        }
    }, {
        key: 'render',
        value: function render() {
            return React.createElement(
                'div',
                null,
                React.createElement(_reactSelect2.default.Async, {
                    name: 'git-hub-users',
                    onChange: this.logChange,
                    loadOptions: this.getOptions
                })
            );
        }
    }]);

    return GitHubUsers;
}(React.Component);

exports.default = GitHubUsers;