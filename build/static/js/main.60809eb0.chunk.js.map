{"version":3,"sources":["components/nav/LOGO.jpg","components/student/students.gif","components/school/schools.gif","components/teacher/teachers.gif","components/nav/NavBar.js","modules/Settings.js","modules/SchoolManager.js","modules/TeacherManager.js","modules/ClassroomManager.js","modules/ClassroomTeacherManager.js","modules/ClassroomStudentManager.js","components/classroom/ClassroomList.js","components/classroom/ClassroomForm.js","components/classroom/ClassroomAssignment.js","components/student/StudentForm.js","modules/StudentManager.js","components/student/StudentEditForm.js","components/student/StudentCard.js","components/student/StudentList.js","components/student/StudentDetail.js","components/school/SchoolList.js","components/teacher/TeacherCard.js","components/school/SchoolDetail.js","components/search/SearchResults.js","components/teacher/TeacherList.js","components/teacher/TeacherEditForm.js","components/teacher/TeacherDetail.js","components/teacher/TeacherForm.js","users/Login.js","users/Register.js","components/auth/AuthRoute.js","components/ApplicationViews.js","modules/JsonManager.js","components/Plato.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showLogout","sessionStorage","getItem","react_default","a","createElement","className","to","onClick","logout","toggle","bind","assertThisInitialized","onMouseEnter","onMouseLeave","routeChange","state","dropdownOpen","input","console","log","target","value","keyCode","getSearchResults","history","push","setState","prevState","clear","window","location","href","_this2","src","LOGO","alt","Dropdown","id","onMouseOver","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","tag","Link","react_router_dom","type","aria-label","aria-describedby","onKeyUp","e","handleSearch","Component","withRouter","Settings","remoteURL","SchoolManager","get","fetch","concat","then","json","delete","method","getAll","TeacherManager","addTeacher","newTeacher","headers","Content-Type","body","JSON","stringify","data","updateTeacher","editedTeacher","ClassroomManager","addClassroom","newClassroom","updateClassroom","editedClassroom","ClassroomTeacherManager","addClassroomTeacher","newClassroomTeacher","ClassroomStudentManager","addClassroomStudent","newClassroomStudent","ClassroomList","prevProps","Fragment","classrooms","map","business","key","classroom","name","ClassroomForm","classroomName","room","days","hours","position","category","saveEnabled","handleFieldChange","evt","stateToChange","constructNewClassroom","preventDefault","teacherId","alert","htmlFor","required","autoFocus","onChange","placeholder","disabled","ClassroomAssignments","classroomId","studentId","constructNewClassroomStudent","classroomStudent","parseInt","match","params","loadClassroomStudents","constructNewClassroomTeacher","classroomTeacher","find","grade","deleteClassroom","multiple","teachers","onDoubleClick","classroomTeachers","filter","ct","teacher","deleteClassroomTeacher","students","classroomStudents","student","deleteClassroomStudent","StudentForm","studentName","parentContact","constructNewStudent","addStudent","defaultValue","StudentManager","newStudent","updateStudent","editedStudent","StudentEditForm","updateExistingStudent","StudentCard","StudentList","student_StudentCard","deleteStudent","owners","studentOwners","StudentDetail","saveDisabled","SchoolList","schools","TeacherCard","SchoolDetail","school","schoolId","phone","numberStudents","std","teacher_TeacherCard","assign","SearchResults","searchResults","length","searchInput","result","TeacherList","TeacherEditForm","email","subjects","size","TeacherDetail","deleteTeacher","TeacherForm","teacherName","constructNewTeacher","Login","password","onLogin","registerIt","allUsers","forEach","user","loggedIn","setItem","fullname","populateAppState","removeItem","Form","FormGroup","Label","Input","for","Button","Register","getAllUsers","newUser","addUser","color","AuthRoute","_ref","path","Destination","superProps","objectWithoutProperties","react_router","exact","render","ApplicationViews","_redirectToClassroomList","_callee","regenerator_default","wrap","_context","prev","next","sent","stop","_redirectToStudentList","_callee2","_context2","_redirectToTeacherList","_callee3","_context3","_callee4","_context4","_callee5","_context5","getAllClassroomTeachers","_callee6","_context6","getAllClassroomStudents","_callee7","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","updateClassroomTeacher","_callee13","_context13","updateClassroomStudent","_callee14","_context14","_callee15","_context15","getOneTeacher","_callee16","_context16","t0","t1","t2","getOneStudent","_callee17","_context17","getAllClassrooms","_callee18","_context18","_callee19","_context19","_callee20","_context20","getAllSchools","_callee21","_context21","getAllStudents","_callee22","_context22","getAllTeachers","_callee23","_context23","isAuthenticated","newState","auth_AuthRoute","loadStudents","loadClassrooms","loadClassroomTeachers","Exact","ClassroomAssignment","Register_Register","users","src_users_Login","StudentDetail_StudentDetail","TeacherEditForm_TeacherEditForm","StudentEditForm_StudentEditForm","StudentForm_StudentForm","TeacherForm_TeacherForm","TeacherDetail_TeacherDetail","components_teacher_TeacherList","loadTeachers","SchoolDetail_SchoolDetail","search_SearchResults","JsonManager","getById","dataset","embedItem","r","post","newObject","response","search","resource","Plato","newSearchResults","results","username","firstName","components_nav_NavBar","components_ApplicationViews","ReactDOM","src_components_Plato","document","getElementById"],"mappings":"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","file":"static/js/main.60809eb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.75d208e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/students.5178bbd6.gif\";","module.exports = __webpack_public_path__ + \"static/media/schools.59a7254b.gif\";","module.exports = __webpack_public_path__ + \"static/media/teachers.a950f890.gif\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Dropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from \"reactstrap\";\r\nimport \"./NavBar.css\";\r\nimport LOGO from \"./LOGO.jpg\";\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    this.routeChange = this.routeChange.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  handleSearch(input) {\r\n    console.log(input.target.value);\r\n    // only search on enter/return keypress\r\n    if (input.keyCode === 13) {\r\n      console.log(\"HANDLE SEARCH - INPUT TARGET VALUE:\", input.target.value);\r\n      this.props.getSearchResults(input.target.value);\r\n      this.props.history.push(\"/search\");\r\n    }\r\n  }\r\n\r\n  routeChange() {\r\n    let path = ``;\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((prevState) => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  onMouseEnter() {\r\n    this.setState({ dropdownOpen: true });\r\n  }\r\n\r\n  onMouseLeave() {\r\n    this.setState({ dropdownOpen: false });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  showLogout = () => {\r\n    if (sessionStorage.getItem(\"Fullname\") !== null) {\r\n      return (\r\n        <button\r\n          className=\"logout btn btn-danger \"\r\n          to={\"/\"}\r\n          onClick={this.logout}\r\n        >\r\n          Log Out\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav>\r\n        {this.showLogout()}\r\n\r\n        <ul\r\n          className=\"nav  mr-auto nav-justified font-weight-bold bg-muted\r\n       \"\r\n        >\r\n          <img className=\"img\" src={LOGO} alt=\"\" />\r\n          <Dropdown\r\n            id=\"Dropdown\"\r\n            className=\" font-weight-bold\"\r\n            onMouseOver={this.onMouseEnter}\r\n            onMouseLeave={this.onMouseLeave}\r\n            isOpen={this.state.dropdownOpen}\r\n            toggle={this.toggle}\r\n          >\r\n            <DropdownToggle id=\"Dropdown\" caret>\r\n              <strong>School Data</strong>\r\n            </DropdownToggle>\r\n            <DropdownMenu className=\"DropdownMenu\">\r\n              <DropdownItem header>The Plato</DropdownItem>\r\n              <DropdownItem divider />\r\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/schools\">\r\n                Schools\r\n              </DropdownItem>\r\n\r\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/teachers\">\r\n                Teachers\r\n              </DropdownItem>\r\n\r\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/students\">\r\n                Students\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link className=\"link-1\" to=\"/classrooms\">\r\n              Classrooms\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"link-1 \" to=\"/search\">\r\n              Search\r\n            </Link>\r\n            <input\r\n              type=\"\"\r\n              className=\"search\"\r\n              aria-label=\"\"\r\n              aria-describedby=\"\"\r\n              onKeyUp={(e) => this.handleSearch(e)}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","export default {\r\n  remoteURL:\r\n    process.env.NODE_ENV === \"production\"?\"/api\":\"http://localhost:5002/api\"\r\n};\r\n","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/schools/${id}`).then((e) => e.json());\r\n  },\r\n  delete(id) {\r\n    return fetch(`${Settings.remoteURL}/schools/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then((e) => e.json());\r\n  },\r\n\r\n  getAll() {\r\n    return fetch(`${Settings.remoteURL}/schools`).then((e) => e.json());\r\n  }\r\n};\r\n","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/teachers/${id}`).then((e) => e.json());\r\n  },\r\n  delete(id) {\r\n    return fetch(`${Settings.remoteURL}/teachers/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then((e) => e.json());\r\n  },\r\n  getAll() {\r\n    return fetch(`${Settings.remoteURL}/teachers?_expand=school`).then((e) =>\r\n      e.json()\r\n    );\r\n  },\r\n  addTeacher(newTeacher) {\r\n    return fetch(`${Settings.remoteURL}/teachers`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newTeacher)\r\n    }).then((data) => data.json());\r\n  },\r\n  updateTeacher(editedTeacher) {\r\n    return fetch(`${Settings.remoteURL}/teachers/${editedTeacher.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(editedTeacher)\r\n    }).then((data) => data.json());\r\n  }\r\n};\r\n","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/classrooms/${id}`).then(e => e.json());\r\n},\r\ndelete(id) {\r\n    return fetch(`${Settings.remoteURL}/classrooms/${id}`, {\r\n        \"method\": \"DELETE\"\r\n    }).then(e => e.json());\r\n},\r\ngetAll() {\r\n    return fetch(`${Settings.remoteURL}/classrooms`).then(e => e.json());\r\n},\r\naddClassroom(newClassroom) {\r\n    return fetch(`${Settings.remoteURL}/classrooms`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newClassroom)\r\n    }).then(data => data.json())\r\n},\r\nupdateClassroom(editedClassroom) {\r\n    return fetch(`${Settings.remoteURL}/classrooms/${editedClassroom.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(editedClassroom)\r\n    }).then(data => data.json());\r\n}\r\n};\r\n","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/classroomTeachers?_expand=teacher/${id}`).then((e) => e.json());\r\n  },\r\n  delete(id) {\r\n    return fetch(`${Settings.remoteURL}/classroomTeachers/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then((e) => e.json());\r\n  },\r\n\r\n  getAll() {\r\n    return fetch(`${Settings.remoteURL}/classroomTeachers?_expand=teacher`).then((e) => e.json());\r\n  },\r\n\r\n\r\naddClassroomTeacher(newClassroomTeacher) {\r\n    return fetch(`${Settings.remoteURL}/classroomTeachers`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newClassroomTeacher)\r\n    }).then(data => data.json())\r\n}\r\n}","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/classroomStudents?_expand=student/${id}`).then((e) => e.json());\r\n  },\r\n  delete(id) {\r\n    return fetch(`${Settings.remoteURL}/classroomStudents/${id}`, {\r\n      method: \"DELETE\"\r\n    }).then((e) => e.json());\r\n  },\r\n\r\n  getAll() {\r\n    return fetch(`${Settings.remoteURL}/classroomStudents?_expand=student`).then((e) => e.json());\r\n  },\r\n\r\n\r\naddClassroomStudent(newClassroomStudent) {\r\n    return fetch(`${Settings.remoteURL}/classroomStudents`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newClassroomStudent)\r\n    }).then(data => data.json())\r\n}\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Classrooms.css\";\r\n\r\n//import ClassroomForm from \"./ClassroomForm\";\r\n\r\nclass ClassroomList extends Component {\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <section>\r\n          <center>\r\n            <h2>Classrooms</h2>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"addnewclass btn btn-warning\"\r\n              onClick={() => {\r\n                this.props.history.push(\"/classrooms/new\");\r\n              }}\r\n            >\r\n              Add a New Classroom\r\n            </button>\r\n          </center>\r\n          <div className=\"right list-group-item bg-transparent\">\r\n            {this.props.classrooms.map((business) => (\r\n              <div\r\n                key={`classroom-${business.id}`}\r\n                classroom={business}\r\n                history={this.props.history}\r\n              >\r\n                <div className=\"teacherlistname\">\r\n                  <Link\r\n                    className=\"teacher-link\"\r\n                    to={`/classrooms/${business.id}`}\r\n                  >\r\n                    {business.name}\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassroomList;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ClassroomForm extends Component {\r\n  // Set initial state\r\n  state = {\r\n    classroomName: \"\",\r\n    room: \"\",\r\n    days: \"\",\r\n    hours: \"\",\r\n    position: \"CLASSROOM\",\r\n    category: \"classrooms\",\r\n    saveEnabled: false\r\n  };\r\n\r\n  // Update state whenever an input field is edited\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  /*\r\n        Local method for validation, creating student object, and\r\n        invoking the function reference passed from parent component\r\n     */\r\n  constructNewClassroom = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.teacherId === null) {\r\n      window.alert(\"Please select a teacher\");\r\n    } else {\r\n      const classroom = {\r\n        name: this.state.classroomName,\r\n        room: this.state.room,\r\n        days: this.state.days,\r\n        hours: this.state.hours,\r\n        position: \"CLASSROOM\",\r\n        category: \"classrooms\"\r\n      };\r\n\r\n      // Create the student and redirect user to student list\r\n      this.props.addClassroom(classroom);\r\n\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"inputstudent studentForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"classroomName\">Classroom name</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              autoFocus\r\n              onChange={this.handleFieldChange}\r\n              className=\"form-control\"\r\n              id=\"classroomName\"\r\n              placeholder=\"Classroom name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"room\">Room</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"room\"\r\n              placeholder=\"Classroom room\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"days\">Meeting Days</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"days\"\r\n              placeholder=\"Meeting Days\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"hours\">Meeting Hours</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"hours\"\r\n              placeholder=\"Meeting Hours\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n            !this.state.classroomName||\r\n            !this.state.room ||\r\n            !this.state.days||\r\n            !this.state.hours ||\r\n            this.state.saveEnabled\r\n            }\r\n            onClick={this.constructNewClassroom}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Classrooms.css\";\r\n\r\nclass ClassroomAssignments extends Component {\r\n  state = {\r\n    classroomId: \"\",\r\n    teacherId: \"\",\r\n\r\n    saveEnabled: false\r\n  };\r\n  state = {\r\n    studentId: \"\",\r\n    classroomId: \"\",\r\n    saveEnabled: false\r\n  };\r\n\r\n  // Update state whenever an input field is edited\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  /*\r\n            Local method for validation, creating class object, and\r\n            invoking the function reference passed from parent component\r\n         */\r\n\r\n  constructNewClassroomStudent = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.classroomId === null) {\r\n      window.alert(\"Please select a class\");\r\n    } else {\r\n      const classroomStudent = {\r\n        studentId: parseInt(this.state.studentId),\r\n        classroomId: parseInt(this.props.match.params.classroomId)\r\n      };\r\n\r\n      this.props.addClassroomStudent(classroomStudent);\r\n      this.props.loadClassroomStudents();\r\n\r\n      //this.props.history.push(\"/classrooms\");\r\n      //window.location.href = \"/classrooms\";\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  constructNewClassroomTeacher = (evt) => {\r\n    //evt.preventDefault();\r\n    if (this.state.classroomId === null) {\r\n      window.alert(\"Please select a class\");\r\n    } else {\r\n      const classroomTeacher = {\r\n        teacherId: parseInt(this.state.teacherId),\r\n        classroomId: parseInt(this.props.match.params.classroomId)\r\n      };\r\n\r\n      this.props.addClassroomTeacher(classroomTeacher);\r\n\r\n      //this.props.history.push(\"/classrooms\");\r\n      //window.location.href = \"/classrooms\";\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const classroom = this.props.classrooms.find(\r\n      (a) => a.id === parseInt(this.props.match.params.classroomId)\r\n    ) || { id: 404, name: \"404\", grade: \"Teacher not found\" };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"classdetails\">\r\n          <h2>\r\n            {classroom.name}\r\n            <span\r\n              className=\"octicon  octicon-trashcan\"\r\n              onClick={\r\n                () => this.props.deleteClassroom(classroom.id)\r\n                //.then(() => this.props.history.push(\"/clasrooms\"))\r\n              }\r\n            />\r\n          </h2>\r\n          <h5>Room: {classroom.room}</h5>\r\n          <h5>Days :{classroom.days}</h5>\r\n          <h5 className=\"classdetails\">Hours : {classroom.hours}</h5>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <div className=\"\">\r\n              <h4>Assign Teachers</h4>\r\n              <select\r\n                className=\"selectlist\"\r\n                multiple={true}\r\n                value={this.props.value}\r\n                name=\"teacher\"\r\n                id=\"teacherId\"\r\n                onChange={this.handleFieldChange}\r\n              >\r\n                {this.props.teachers.map((e) => (\r\n                  <option\r\n                    onDoubleClick={this.constructNewClassroomTeacher}\r\n                    key={e.id}\r\n                    id={e.id}\r\n                    value={e.id}\r\n                  >\r\n                    {e.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"alignlefttselect\">\r\n              <h3>Teachers Assigned</h3>\r\n              {this.props.classroomTeachers\r\n                .filter((ct) => ct.classroomId === classroom.id)\r\n                .map((ct) => (\r\n                  <div\r\n                    className=\"studentcard\"\r\n                    key={ct.id}\r\n                    id={ct.id}\r\n                    value={ct.id}\r\n                    history={this.props.history}\r\n                  >\r\n                    <div className=\"studentname\">\r\n                      <Link className=\"\" to={`/teachers/${ct.teacherId}`}>\r\n                        {ct.teacher.name}\r\n                      </Link>\r\n\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.deleteClassroomTeacher(ct.id)\r\n                          }\r\n                          className=\"\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\" column\">\r\n            <h4>Assign Students</h4>\r\n            <select\r\n              className=\" selectlist\"\r\n              multiple={true}\r\n              value={this.props.value}\r\n              name=\"student\"\r\n              id=\"studentId\"\r\n              onChange={this.handleFieldChange}\r\n            >\r\n              {this.props.students.map((e) => (\r\n                <option\r\n                  onDoubleClick={this.constructNewClassroomStudent}\r\n                  key={e.id}\r\n                  id={e.id}\r\n                  value={e.id}\r\n                >\r\n                  {e.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <div className=\"alignright \">\r\n              <h3>Students Assigned</h3>\r\n              {this.props.classroomStudents\r\n                .filter((ct) => ct.classroomId === classroom.id)\r\n                .map((ct) => (\r\n                  <div\r\n                    className=\"studentcard\"\r\n                    key={ct.id}\r\n                    id={ct.id}\r\n                    value={ct.id}\r\n                    history={this.props.history}\r\n                  >\r\n                    <div className=\"studentname\">\r\n                      <Link className=\"\" to={`/students/${ct.studentId}`}>\r\n                        {ct.student.name}\r\n                      </Link>\r\n\r\n                      <div className=\"buttons\">\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.deleteClassroomStudent(ct.id)\r\n                          }\r\n                          className=\"\"\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassroomAssignments;\r\n","import React, { Component } from \"react\";\r\nimport \"./Student.css\";\r\n\r\nexport default class StudentForm extends Component {\r\n  // Set initial state\r\n  state = {\r\n    studentName: \"\",\r\n    grade: \"\",\r\n    parentContact: \"\",\r\n    teacherId: \"\",\r\n    position: \"STUDENT\",\r\n    category: \"students\",\r\n    saveEnabled: false\r\n  };\r\n\r\n  // Update state whenever an input field is edited\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  /*\r\n        Local method for validation, creating student object, and\r\n        invoking the function reference passed from parent component\r\n     */\r\n  constructNewStudent = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.teacherId === null) {\r\n      window.alert(\"Please select a teacher\");\r\n    } else {\r\n      const student = {\r\n        name: this.state.studentName,\r\n        grade: this.state.grade,\r\n        parentContact: this.state.parentContact,\r\n        position: \"STUDENT\",\r\n        category: \"students\",\r\n        teacherId: parseInt(this.state.teacherId),\r\n      };\r\n\r\n      // Create the student and redirect user to student list\r\n      this.props.addStudent(student);\r\n\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"inputstudent studentForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"studentName\">Student name</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              autoFocus\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"studentName\"\r\n              placeholder=\"Student name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"grade\">Grade</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"grade\"\r\n              placeholder=\"Student grade\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"parentContact\">Parent Information</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"parentContact\"\r\n              placeholder=\"Parent Information\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"teacher\">Assign to a Teacher</label>\r\n            <select\r\n              defaultValue=\"\"\r\n              name=\"teacher\"\r\n              id=\"teacherId\"\r\n              onChange={this.handleFieldChange}\r\n            >\r\n              <option value=\"\">Select an teacher</option>\r\n              {this.props.teachers.map((e) => (\r\n                <option key={e.id} id={e.id} value={e.id}>\r\n                  {e.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              !this.state.studentName ||\r\n              !this.state.grade ||\r\n              !this.state.parentContact|| \r\n              !this.state.teacherId ||\r\n              this.state.saveEnabled\r\n            }\r\n            onClick={this.constructNewStudent}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n  get(id) {\r\n    return fetch(`${Settings.remoteURL}/students/${id}`).then((e) => e.json());\r\n  },\r\n    delete(id) {\r\n        return fetch(`${Settings.remoteURL}/students/${id}`, {\r\n            \"method\": \"DELETE\"\r\n        }).then(e => e.json());\r\n    },\r\n    getAll() {\r\n        return fetch(`${Settings.remoteURL}/students?_expand=teacher`).then(e => e.json());\r\n    },\r\n    addStudent(newStudent) {\r\n        return fetch(`${Settings.remoteURL}/students`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(newStudent)\r\n        }).then(data => data.json())\r\n    },\r\n    updateStudent(editedStudent) {\r\n        return fetch(`${Settings.remoteURL}/students/${editedStudent.id}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(editedStudent)\r\n        }).then(data => data.json());\r\n    }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport StudentManager from \"../../modules/StudentManager\";\r\n\r\nexport default class StudentEditForm extends Component {\r\n  // Set initial state\r\n  state = {\r\n    studentName: \"\",\r\n    grade: \"\",\r\n    parentContact: \"\",\r\n    teacherId: \"\",\r\n    position: \"STUDENT\",\r\n    category: \"students\"\r\n \r\n  };\r\n\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  updateExistingStudent = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (this.state.teacher === \"\") {\r\n      window.alert(\"Please select a teacher\");\r\n    } else {\r\n      const editedStudent = {\r\n        id: this.props.match.params.studentId,\r\n        name: this.state.studentName,\r\n        grade: this.state.grade,\r\n        parentContact: this.state.parentContact,\r\n        position: \"STUDENT\",\r\n        category: \"students\",\r\n        teacherId: parseInt(this.state.teacherId)\r\n      };\r\n\r\n      this.props\r\n        .updateStudent(editedStudent)\r\n        .then(() => this.props.history.push(\"/students\"));\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    StudentManager.get(this.props.match.params.studentId).then((student) => {\r\n      this.setState({\r\n        studentName: student.name,\r\n        grade: student.grade,\r\n        parentContact: student.parentContact,\r\n        teacherId: student.teacherId,\r\n        position: \"STUDENT\",\r\n        classroomId: \"Not Assigned\",\r\n      category: \"students\",\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"inputstudent studentForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"studentName\">Student name</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"studentName\"\r\n              value={this.state.studentName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"grade\">Grade</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"grade\"\r\n              value={this.state.grade}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"parentContact\">Parent Information</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"parentContact\"\r\n              value={this.state.parentContact}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"teacher\">Assign to a Teacher</label>\r\n            <select\r\n              name=\"teacher\"\r\n              id=\"teacherId\"\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.teacherId}\r\n            >\r\n              <option value=\"undefined\">Select an teacher</option>\r\n              {this.props.teachers.map((e) => (\r\n                <option key={e.id} id={e.id} value={e.id}>\r\n                  {e.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              !this.state.studentName ||\r\n              !this.state.grade ||\r\n              !this.state.parentContact ||\r\n              !this.state.teacherId\r\n            }\r\n            onClick={this.updateExistingStudent}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Student.css\";\r\n\r\nclass StudentCard extends Component {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    /* Reference Code\r\n      const ownerStringArray = this.props.studentOwners\r\n    .filter((ao) => ao.studentId === this.props.student.id)\r\n    .map((ao) => this.props.owners.find((o) => o.id === ao.ownerId).name);\r\n    */\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <section className=\"\">\r\n          <div className=\"teacherlistname\" key={this.props.student.id}>\r\n            <div className=\"\">\r\n              <Link\r\n                className=\"teacher-link\"\r\n                to={`/students/${this.props.student.id}`}\r\n              >\r\n                {this.props.student.name}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          {/*\r\n              ({ownerStringArray.join(\", \")}) */}\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentCard;\r\n","import React, { Component } from \"react\";\r\nimport \"./StudentList.css\";\r\nimport StudentCard from \"./StudentCard\";\r\nimport students from \"./students.gif\";\r\n//import Octicon from 'react-octicon'\r\n\r\nclass StudentList extends Component {\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"centerChildren\">\r\n        <img className=\"schoolgif\" src={students} alt=\"\"></img>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/students/new\");\r\n            }}\r\n          >\r\n            Add a New Student\r\n          </button>\r\n        </div>\r\n        <article className=\"list-group-item bg-transparent\">\r\n          {this.props.students.map((student) => (\r\n            <StudentCard\r\n              key={`student-${student.id}`}\r\n              student={student}\r\n              deleteStudent={this.props.deleteStudent}\r\n              owners={this.props.owners}\r\n              studentOwners={this.props.studentOwners}\r\n              history={this.props.history}\r\n            />\r\n          ))}\r\n        </article>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentList;\r\n","import React, { Component } from \"react\";\r\nimport \"./Student.css\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default class StudentDetail extends Component {\r\n  state = {\r\n    saveDisabled: false\r\n  };\r\n\r\n  render() {\r\n    //const teacher = this.props.teachers.find(a =>\r\n    // a.id === parseInt(this.props.match.params.teacherId))\r\n\r\n    return (\r\n      <section className=\"student\">\r\n        <div key={this.props.student.id} className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h4 className=\"card-title\">{this.props.student.name}</h4>\r\n            <h6 className=\"card-title\">\r\n              Student Grade: {this.props.student.grade}\r\n            </h6>\r\n            <h6 className=\"card-title\">\r\n              Parent Information: {this.props.student.parentContact}\r\n            </h6>\r\n            {/*<h6 className=\"card-title\">\r\n              Assigned Teachers: {this.props.student.teacher.name}\r\n    </h6>*/}\r\n            <center>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={() => {\r\n                  this.props.history.push(\r\n                    `/students/${this.props.student.id}/edit`\r\n                  );\r\n                }}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ saveDisabled: true }, () =>\r\n                    this.props.deleteStudent(this.props.student.id)\r\n                  );\r\n                }}\r\n                disabled={this.state.saveDisabled}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <b>Delete:</b> {this.props.student.name}\r\n              </button>\r\n            </center>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport schools from \"./schools.gif\"\r\nimport \"./School.css\";\r\n\r\nexport default class SchoolList extends Component {\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"schoolbox \">\r\n      <img className=\"schoolgif\" src={schools} alt=\"\"></img>\r\n      <section className=\"list \">\r\n        {this.props.schools.map((business) => (\r\n          <div key={business.id} className=\"card \">\r\n            \r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title \">\r\n                <Link className=\"text-white\" to={`/schools/${business.id}`}>\r\n                  {business.name}\r\n                  \r\n                </Link>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass TeacherCard extends Component {\r\n  render() {\r\n    /* Reference Code\r\n          const ownerStringArray = this.props.studentOwners\r\n        .filter((ao) => ao.studentId === this.props.student.id)\r\n        .map((ao) => this.props.owners.find((o) => o.id === ao.ownerId).name);\r\n        */\r\n\r\n    return (\r\n    \r\n        \r\n          <div className=\"teacherlistname\">\r\n        <Link className=\"teacher-link\" to={`/teachers/${this.props.teacher.id}`}>\r\n                  {this.props.teacher.name} \r\n                </Link>\r\n                </div>\r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherCard;\r\n","import React, { Component } from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\nimport TeacherCard from \"../teacher/TeacherCard\";\r\n\r\nexport default class SchoolDetail extends Component {\r\n  render() {\r\n    const school = this.props.schools.find(\r\n      (a) => a.id === parseInt(this.props.match.params.schoolId)\r\n    ) || { id: 404, name: \"404\", grade: \"School not found\" };\r\n   \r\n\r\n\r\n    return (\r\n      <section className=\"\">\r\n        <div key={school.id} className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h2 className=\"card-title\">{school.name}</h2>\r\n            <h6 className=\"card-title\">Address: {school.location}</h6>\r\n            <h6 className=\"card-title\">Phone Number: {school.phone}</h6>\r\n            <h6 className=\"card-title\">\r\n              Number of Students: {school.numberStudents}\r\n            </h6>\r\n\r\n            <section className=\"card\">\r\n              <div className=\"\">\r\n              <h5 className=\"card text-white\">Teachers:</h5>\r\n              <div className=\"card-body\">\r\n                {this.props.teachers\r\n                  .filter((std) => std.schoolId === school.id )\r\n                  .map((std) => (\r\n                    <TeacherCard key={std.id} teacher={std} {...this.props} />\r\n                  ))}\r\n              </div>\r\n\r\n              </div>\r\n\r\n\r\n\r\n            </section>\r\n\r\n            <div className=\"\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SearchResults extends Component {\r\n  render() {\r\n    // console.log(\"search results props\", this.props.searchResults);\r\n    if (this.props.searchResults.length > 0) {\r\n      return (\r\n        <section className=\" card searchResults\">\r\n          <h2 className=\"page_title \">\r\n            Search Results for: \"{this.props.searchInput}\"\r\n          </h2>\r\n          {this.props.searchResults.map((result) => (\r\n            <div\r\n              key={`${result.id}${result.name}`}\r\n              className=\"result_card\"\r\n            >\r\n              {result.position}:\r\n              <Link className=\"searchlinks\" to={`${result.category}/${result.id}`}>\r\n                   {result.name}\r\n              </Link>\r\n            </div>\r\n          ))}\r\n           \r\n        \r\n        </section>\r\n      );\r\n    } else {\r\n      return (\r\n        <section className=\"card searchResults\">\r\n          <h1 className=\"page_title\">\r\n            RESULTS :{this.props.searchInput}\r\n          </h1>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TeacherList.css\";\r\nimport \"./Teacher.css\";\r\n\r\nimport teachers from \"./teachers.gif\";\r\n\r\nclass TeacherList extends Component {\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {}\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"centerChildren\">\r\n          <img className=\"teachergif\" src={teachers} alt=\"\" />\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => {\r\n                this.props.history.push(\"/teachers/new\");\r\n              }}\r\n            >\r\n              Add a New Teacher\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <section className=\"list-group-item bg-transparent\">\r\n          {this.props.teachers.map((teacher) => (\r\n            <div key={`teacher-${teacher.id}`} teacher={teacher}>\r\n              <div className=\"teacherlistname\">\r\n                <Link className=\"teacher-link\" to={`/teachers/${teacher.id}`}>\r\n                  {teacher.name} ({teacher.school.name})\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherList;\r\n","import React, { Component } from \"react\";\r\nimport TeacherManager from \"../../modules/TeacherManager\";\r\nimport \"./Teacher.css\";\r\n\r\nexport default class TeacherEditForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    subjects: \"\",\r\n    position: \"TEACHER\",\r\n    category: \"teachers\",\r\n    school: \"\"\r\n  };\r\n\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  updateTeacher = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (this.state.teacher === \"\") {\r\n      window.alert(\"Please select a teacher\");\r\n    } else {\r\n      const editedTeacher = {\r\n        id: this.props.match.params.teacherId,\r\n        name: this.state.name,\r\n        email: this.state.email,\r\n        subjects: this.state.subjects,\r\n        position: \"TEACHER\",\r\n        category: \"teachers\",\r\n        schoolId: parseInt(this.state.schoolId)\r\n\r\n        //info: this.state.info\r\n      };\r\n\r\n      this.props\r\n        .updateTeacher(editedTeacher)\r\n        .then(() => this.props.history.push(\"/teachers\"));\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    TeacherManager.get(this.props.match.params.teacherId).then((teachers) => {\r\n      this.setState({\r\n        name: teachers.name,\r\n        email: teachers.email,\r\n        subjects: teachers.subjects,\r\n        position: \"TEACHER\",\r\n        category: \"teachers\",\r\n        schoolId: teachers.schoolId\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"inputteacher teacherForm\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Teacher name</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            onChange={this.handleFieldChange}\r\n            id=\"name\"\r\n            value={this.state.name || \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            onChange={this.handleFieldChange}\r\n            id=\"email\"\r\n            value={this.state.email || \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"subjects\">Subjects</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            className=\"form-control\"\r\n            onChange={this.handleFieldChange}\r\n            id=\"subjects\"\r\n            value={this.state.subjects || \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"school\">Assign to a School</label>\r\n          <select\r\n            name=\"school\"\r\n            id=\"schoolId\"\r\n            onChange={this.handleFieldChange}\r\n            value={this.state.schoolId}\r\n          >\r\n            {this.props.schools.map((e) => (\r\n              <option key={e.id} id={e.id} value={e.id}>\r\n                {e.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-warning\"\r\n            size=\"sm\"\r\n            disabled={\r\n              !this.state.name ||\r\n              !this.state.email ||\r\n              !this.state.subjects ||\r\n              !this.state.schoolId\r\n            }\r\n            onClick={this.updateTeacher}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Teacher.css\";\r\nimport StudentCard from \"../student/StudentCard\";\r\n\r\n\r\n//import StudentCard from '../student/StudentCard';\r\n\r\nexport default class TeacherDetail extends Component {\r\n  render() {\r\n    const teacher = this.props.teachers.find(\r\n      (a) => a.id === parseInt(this.props.match.params.teacherId)\r\n    ) || { id: 404, name: \"404\", grade: \"Teacher not found\" };\r\n\r\n    return (\r\n      <section className=\"student\">\r\n        <div key={teacher.id} className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"teacherdata\">\r\n              <h4 className=\"teachername\">\r\n                {teacher.name}\r\n\r\n                <span\r\n                  className=\"octicon octicon-trashcan\"\r\n                  onClick={() =>\r\n                    this.props\r\n                      .deleteTeacher(teacher.id)\r\n                      .then(() => this.props.history.push(\"/teachers\"))\r\n                  }\r\n                />\r\n                <span\r\n                  className=\"octicon octicon-pencil\"\r\n                  onClick={() => {\r\n                    this.props.history.push(`/teachers/${teacher.id}/edit`);\r\n                  }}\r\n                />\r\n              </h4>\r\n              <div className=\"teacherinfo\">\r\n                <h6 className=\"card-title\">E-mail: {teacher.email}</h6>\r\n                <h6 className=\"card-title\">Subjects: {teacher.subjects}</h6>\r\n                {/*<h6 className=\"card-title\">School: {teacher.school.name}</h6>*/}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"\" />\r\n\r\n            <h6 className=\"page-header studentdetails\">Students:</h6>\r\n\r\n            {this.props.students\r\n              .filter((std) => std.teacherId === teacher.id)\r\n              .map((std) => (\r\n                <StudentCard key={std.id} student={std} {...this.props} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Teacher.css\";\r\n\r\nexport default class TeacherForm extends Component {\r\n  // Set initial state\r\n  state = {\r\n    teacherName: \"\",\r\n    email: \"\",\r\n    subjects: \"\",\r\n    schoolId: \"\",\r\n    position: \"TEACHER\",\r\n    category: \"teachers\",\r\n    saveEnabled: false\r\n  };\r\n\r\n  // Update state whenever an input field is edited\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  /*\r\n        Local method for validation, creating teacher object, and\r\n        invoking the function reference passed from parent component\r\n     */\r\n  constructNewTeacher = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.school === \"\") {\r\n      window.alert(\"Please select a teacher\");\r\n    } else {\r\n      const teacher = {\r\n      \r\n        name: this.state.teacherName,\r\n        email: this.state.email,\r\n        subjects: this.state.subjects,\r\n        position: \"TEACHER\",\r\n        category: \"teachers\",\r\n        schoolId: parseInt(this.state.schoolId)\r\n      };\r\n\r\n      // Create the teacher and redirect user to teacher list\r\n      this.props.addTeacher(teacher);\r\n\r\n      this.setState({ saveEnabled: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"inputteacher teacherForm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"teacherName\">Teacher name</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              autoFocus\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"teacherName\"\r\n              placeholder=\"Teacher name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"email\"\r\n              placeholder=\"Teacher Email\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"subjects\">Subjects</label>\r\n            <input\r\n              type=\"text\"\r\n              required\r\n              className=\"form-control\"\r\n              onChange={this.handleFieldChange}\r\n              id=\"subjects\"\r\n              placeholder=\"Subjects\"\r\n              value={this.state.subjects}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"school\">Assign to a School</label>\r\n            <select\r\n              defaultValue=\"\"\r\n              name=\"school\"\r\n              id=\"schoolId\"\r\n              onChange={this.handleFieldChange}\r\n            >\r\n              <option value=\"\">Select a School</option>\r\n              {this.props.schools.map((e) => (\r\n                <option key={e.id} id={e.id} value={e.id}>\r\n                  {e.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={\r\n              !this.state.teacherName ||\r\n              !this.state.email ||\r\n              !this.state.subjects ||\r\n              !this.state.schoolId ||\r\n              this.state.saveEnabled\r\n            }\r\n            onClick={this.constructNewTeacher}\r\n            className=\"btn btn-warning\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  onLogin = (evt) => {\r\n    evt.preventDefault();\r\n    this.props\r\n      .registerIt(this.state.email, this.state.password)\r\n      .then((allUsers) => {\r\n        if (allUsers.length < 1) {\r\n          alert(\"No Users Found or Incorrect Info\");\r\n        } else {\r\n          allUsers.forEach((user) => {\r\n            let loggedIn = false;\r\n            if (\r\n              this.state.email === user.email &&\r\n              this.state.password === user.password\r\n            ) {\r\n              loggedIn = true;\r\n            }\r\n            if (loggedIn === true) {\r\n              sessionStorage.setItem(\"User\", user.id);\r\n              sessionStorage.setItem(\"Fullname\", user.fullname);\r\n              this.props.populateAppState();\r\n              this.props.history.push(\"/schools\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem(\"User\") !== null) {\r\n      sessionStorage.removeItem(\"User\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>Welcome</h2>\r\n\r\n        <Form className=\"inputstudent form\">\r\n          <FormGroup>\r\n            <Label>Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              required\r\n              onChange={this.handleFieldChange}\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"examplePassword\">Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              required\r\n              onChange={this.handleFieldChange}\r\n              id=\"password\"\r\n              placeholder=\"********\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            className=\"btn btn-warning\"\r\n            type=\"submit\"\r\n            onClick={this.onLogin}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <br />\r\n          Not a User?{\" \"}\r\n          <Link className=\"registerlink\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nexport default class Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    fullname: \"\"\r\n  };\r\n\r\n  handleFieldChange = (evt) => {\r\n    const stateToChange = {};\r\n    stateToChange[evt.target.id] = evt.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  getAllUsers = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.getAll().then((allUsers) => {\r\n      let usersArray = allUsers.filter((user) => {\r\n        return user.email === this.state.email;\r\n      });\r\n\r\n      if (usersArray.length > 0) {\r\n        alert(\"Please use different email\");\r\n      } else {\r\n        const newUser = {\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          fullname: this.state.fullname\r\n        };\r\n        this.props.addUser(newUser);\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>Register a new account</p>\r\n        <Form className=\"inputstudent form\">\r\n          <FormGroup>\r\n            <Label>Email:</Label>\r\n            <Input\r\n              type=\"email\"\r\n              required\r\n              onChange={this.handleFieldChange}\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              id=\"email\"\r\n              placeholder=\"myemail@email.com\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label>Password:</Label>\r\n            <Input\r\n              type=\"password\"\r\n              required\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"********\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label>FullName:</Label>\r\n            <Input\r\n              type=\"text\"\r\n              required\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.fullname}\r\n              name=\"fullname\"\r\n              id=\"fullname\"\r\n              placeholder=\"Full Name\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <Button\r\n            type=\"button\"\r\n            disabled={\r\n              !this.state.email || !this.state.password || !this.state.fullname\r\n            }\r\n            color=\"primary\"\r\n            onClick={this.getAllUsers}\r\n          >\r\n            {\" \"}\r\n            Register{\" \"}\r\n          </Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n//import Login from \"../../users/Login\"\r\n\r\nconst isAuthenticated = () =>\r\n    \r\n    sessionStorage.getItem(\"Fullname\") !== null\r\n\r\nconst AuthRoute = ({ path, Destination, ...superProps} ) => {\r\n    return (\r\n        <Route exact path={path} render={props => {\r\n            if (isAuthenticated()) {\r\n                return <Destination {...props} {...superProps} />\r\n            } else {\r\n                return <Redirect to=\"/\" />\r\n            }\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default AuthRoute","import React, { Component } from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport OwnerManager from \"../modules/OwnerManager\";\r\nimport SchoolManager from \"../modules/SchoolManager\";\r\nimport TeacherManager from \"../modules/TeacherManager\";\r\nimport ClassroomManager from \"../modules/ClassroomManager\";\r\nimport ClassroomTeacherManager from \"../modules/ClassroomTeacherManager\";\r\nimport ClassroomStudentManager from \"../modules/ClassroomStudentManager\";\r\n\r\nimport ClassroomList from \"./classroom/ClassroomList\";\r\nimport ClassroomForm from \"./classroom/ClassroomForm\";\r\nimport ClassroomAssignment from \"./classroom/ClassroomAssignment\";\r\n\r\nimport StudentForm from \"./student/StudentForm\";\r\nimport StudentEditForm from \"./student/StudentEditForm\";\r\nimport StudentManager from \"../modules/StudentManager\";\r\nimport StudentList from \"./student/StudentList\";\r\nimport StudentDetail from \"./student/StudentDetail\";\r\n\r\nimport SchoolList from \"./school/SchoolList\";\r\nimport SchoolDetail from \"./school/SchoolDetail\";\r\n\r\nimport SearchResults from \"./search/SearchResults\";\r\n\r\nimport TeacherList from \"./teacher/TeacherList\";\r\nimport TeacherEditForm from \"./teacher/TeacherEditForm\";\r\nimport TeacherDetail from \"./teacher/TeacherDetail\";\r\nimport TeacherForm from \"./teacher/TeacherForm\";\r\n\r\nimport Login from \"../users/Login\";\r\nimport Register from \"../users/Register\";\r\nimport AuthRoute from \"./auth/AuthRoute\";\r\nimport \"./App.css\";\r\n\r\nclass ApplicationViews extends Component {\r\n  state = {\r\n    owners: [],\r\n    studentOwners: [],\r\n    teachers: [],\r\n    students: [],\r\n    schools: [],\r\n    classrooms: [],\r\n    classroomTeachers: [],\r\n    classroomStudents: []\r\n  };\r\n  _redirectToClassroomList = async () => {\r\n    const classrooms = await ClassroomManager.getAll();\r\n    this.props.history.push(\"/classrooms\");\r\n    this.setState({ classrooms: classrooms });\r\n  };\r\n  _redirectToStudentList = async () => {\r\n    const students = await StudentManager.getAll();\r\n    this.props.history.push(\"/students\");\r\n    this.setState({ students: students });\r\n  };\r\n  _redirectToTeacherList = async () => {\r\n    const teachers = await TeacherManager.getAll();\r\n    this.props.history.push(\"/teachers\");\r\n    this.setState({ teachers: teachers });\r\n  };\r\n\r\n  deleteStudent = (id) => {\r\n    StudentManager.delete(id).then(this._redirectToStudentList);\r\n  };\r\n\r\n  deleteTeacher = async (id) => {\r\n    await TeacherManager.delete(id).then(this._redirectToTeacherList);\r\n  };\r\n  deleteClassroomTeacher = async (id) => {\r\n    await ClassroomTeacherManager.delete(id).then(this.getAllClassroomTeachers);\r\n  };\r\n  deleteClassroomStudent = async (id) => {\r\n    await ClassroomStudentManager.delete(id).then(this.getAllClassroomStudents);\r\n  };\r\n  deleteClassroom = (id) => {\r\n    ClassroomManager.delete(id)\r\n    .then(this._redirectToClassroomList);\r\n  };\r\n\r\n  addClassroom = async (classroom) => {\r\n    await ClassroomManager.addClassroom(classroom);\r\n    this._redirectToClassroomList();\r\n  };\r\n\r\n  addClassroomTeacher = async (classroomTeacher) => {\r\n    await ClassroomTeacherManager.addClassroomTeacher(classroomTeacher).then(\r\n      this.getAllClassroomTeachers\r\n    );\r\n  };\r\n\r\n  addClassroomStudent = async (classroomStudent) => {\r\n    await ClassroomStudentManager.addClassroomStudent(classroomStudent).then(\r\n      this.getAllClassroomStudents\r\n    );\r\n  };\r\n\r\n  addStudent = async (student) => {\r\n    await StudentManager.addStudent(student);\r\n    this._redirectToStudentList();\r\n  };\r\n\r\n  addTeacher = async (teacher) => {\r\n    await TeacherManager.addTeacher(teacher);\r\n    this._redirectToTeacherList();\r\n  };\r\n\r\n  updateStudent = async (student) => {\r\n    await StudentManager.updateStudent(student);\r\n    this._redirectToStudentList();\r\n  };\r\n\r\n  updateClassroomTeacher = async (student) => {\r\n    await ClassroomManager.updateClassroomTeacher(student);\r\n    //this._redirectToStudentList();\r\n  };\r\n\r\n  updateClassroomStudent = async (student) => {\r\n    await ClassroomManager.updateClassroomStudent(student);\r\n    //this._redirectToStudentList();\r\n  };\r\n\r\n  updateTeacher = async (teacher) => {\r\n    await TeacherManager.updateTeacher(teacher);\r\n    this._redirectToTeacherList();\r\n  };\r\n\r\n  getOneTeacher = async () => {\r\n    this.setState({ teachers: await TeacherManager.get() });\r\n  };\r\n  getOneStudent = async () => {\r\n    this.setState({ students: await StudentManager.get() });\r\n  };\r\n\r\n  getAllClassrooms = async () => {\r\n    this.setState({ classrooms: await ClassroomManager.getAll() });\r\n  };\r\n\r\n  getAllClassroomTeachers = async () => {\r\n    this.setState({\r\n      classroomTeachers: await ClassroomTeacherManager.getAll()\r\n    });\r\n  };\r\n\r\n  getAllClassroomStudents = async () => {\r\n    this.setState({\r\n      classroomStudents: await ClassroomStudentManager.getAll()\r\n    });\r\n  };\r\n  getAllSchools = async () => {\r\n    this.setState({ students: await SchoolManager.getAll() });\r\n  };\r\n\r\n  getAllStudents = async () => {\r\n    this.setState({ students: await StudentManager.getAll() });\r\n  };\r\n  getAllTeachers = async () => {\r\n    this.setState({ teachers: await TeacherManager.getAll() });\r\n  };\r\n\r\n  componentDidUpdate() {}\r\n\r\n  componentDidMount() {\r\n    const newState = {};\r\n\r\n    ClassroomManager.getAll().then(\r\n      (classrooms) => (newState.classrooms = classrooms)\r\n    );\r\n\r\n    ClassroomTeacherManager.getAll().then(\r\n      (classroomTeachers) => (newState.classroomTeachers = classroomTeachers)\r\n    );\r\n\r\n    ClassroomStudentManager.getAll().then(\r\n      (classroomStudents) => (newState.classroomStudents = classroomStudents)\r\n    );\r\n\r\n    SchoolManager.getAll()\r\n      .then((schools) => (newState.schools = schools))\r\n      .then((schools) => (newState.schools = schools))\r\n      .then(() => SchoolManager.getAll());\r\n\r\n    TeacherManager.getAll()\r\n      .then((teachers) => (newState.teachers = teachers))\r\n      .then(() => SchoolManager.getAll())\r\n      .then((schools) => (newState.schools = schools));\r\n\r\n    StudentManager.getAll()\r\n      .then((students) => (newState.students = students))\r\n      .then(() => TeacherManager.getAll())\r\n      .then((teachers) => (newState.teachers = teachers))\r\n      .then(() => SchoolManager.getAll())\r\n      .then((schools) => (newState.schools = schools))\r\n\r\n      //OWNERS\r\n      /*\r\n      .then(() => OwnerManager.getAll())\r\n      .then((owners) => (newState.owners = owners))\r\n      .then(() =>\r\n        fetch(\"http://localhost:5002/studentOwners\").then((r) => r.json())\r\n      )\r\n      .then((studentOwners) => (newState.studentOwners = studentOwners))\r\n      .then(() => this.setState(newState));\r\n      */\r\n  }\r\n\r\n  isAuthenticated = () => sessionStorage.getItem(\"Fullname\") !== null;\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AuthRoute\r\n          path=\"/schools\"\r\n          Destination={SchoolList}\r\n          schools={this.state.schools}\r\n        />\r\n        <AuthRoute\r\n          path=\"/students\"\r\n          Destination={StudentList}\r\n          owners={this.state.owners}\r\n          students={this.state.students}\r\n          studentOwners={this.state.studentOwners}\r\n          deleteStudent={this.deleteStudent}\r\n          loadStudents={this.getAllStudents}\r\n          teachers={this.state.teachers}\r\n        />\r\n        <AuthRoute\r\n          path=\"/classrooms\"\r\n          Destination={ClassroomList}\r\n          classrooms={this.state.classrooms}\r\n          classroomTeachers={this.state.classroomTeachers}\r\n          classroomStudents={this.state.classroomStudents}\r\n          addClassroom={this.addClassroom}\r\n          deleteClassroomTeacher={this.deleteClassroomTeacher}\r\n          loadClassrooms={this.getAllClassrooms}\r\n          students={this.state.students}\r\n          teachers={this.state.teachers}\r\n          schools={this.state.schools}\r\n          addClassroomTeacher={this.addClassroomTeacher}\r\n          loadClassroomTeachers={this.getAllClassroomTeachers}\r\n          addClassroomStudent={this.addClassroomStudent}\r\n          loadClassroomStudents={this.getAllClassroomStudents}\r\n        />\r\n\r\n        <AuthRoute\r\n          path=\"/classrooms/new\"\r\n          Destination={ClassroomForm}\r\n          classrooms={this.state.classrooms}\r\n          classroomTeachers={this.state.classroomTeachers}\r\n          addClassroom={this.addClassroom}\r\n          addClassroomTeacher={this.addClassroomTeacher}\r\n          loadClassroomTeachers={this.getAllClassroomTeachers}\r\n          classroomStudents={this.state.classroomStudents}\r\n          addClassroomStudent={this.addClassroomStudent}\r\n          loadClassroomStudents={this.getAllClassroomStudents}\r\n          deleteClassroomTeacher={this.deleteClassroomTeacher}\r\n          teachers={this.state.teachers}\r\n          students={this.state.students}\r\n          schools={this.state.schools}\r\n        />\r\n\r\n\r\n\r\n<Route\r\n          Exact\r\n          path=\"/classrooms/:classroomId(\\d+)\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <ClassroomAssignment\r\n                  {...props}\r\n                  classrooms={this.state.classrooms}\r\n                  classroomTeachers={this.state.classroomTeachers}\r\n                  addClassroomTeacher={this.addClassroomTeacher}\r\n                  loadClassroomTeachers={this.getAllClassroomTeachers}\r\n                  classroomStudents={this.state.classroomStudents}\r\n                  deleteClassroomTeacher={this.deleteClassroomTeacher}\r\n                  deleteClassroom={this.deleteClassroom}\r\n                  deleteClassroomStudent={this.deleteClassroomStudent}\r\n                  addClassroomStudent={this.addClassroomStudent}\r\n                  loadClassroomStudents={this.getAllClassroomStudents}\r\n                  teachers={this.state.teachers}\r\n                  students={this.state.students}\r\n                  schools={this.state.schools}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n\r\n\r\n\r\n\r\n        <Route\r\n          path=\"/register\"\r\n          render={(props) => {\r\n            return (\r\n              <Register\r\n                {...props}\r\n                addUser={this.props.addUser}\r\n                users={this.props.users}\r\n                registerIt={this.props.registerIt}\r\n                getAll={this.props.getAllUsers}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) => {\r\n            return (\r\n              <Login\r\n                {...props}\r\n                populateAppState={this.props.populateAppState}\r\n                registerIt={this.props.registerIt}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          Exact\r\n          path=\"/students/:studentId(\\d+)\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              const student = this.state.students.find(\r\n                (a) => a.id === parseInt(props.match.params.studentId)\r\n              ) || { id: 404, name: \"404\", grade: \"Student not found\" };\r\n\r\n              return (\r\n                <StudentDetail\r\n                  {...props}\r\n                  student={student}\r\n                  deleteStudent={this.deleteStudent}\r\n                  students={this.state.students}\r\n                />\r\n              );\r\n            } else {\r\n              return <Login />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/teachers/:teacherId(\\d+)/edit\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <TeacherEditForm\r\n                  {...props}\r\n                  schools={this.state.schools}\r\n                  updateTeacher={this.updateTeacher}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/students/:studentId(\\d+)/edit\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <StudentEditForm\r\n                  {...props}\r\n                  teachers={this.state.teachers}\r\n                  updateStudent={this.updateStudent}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/students/new\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <StudentForm\r\n                  {...props}\r\n                  addStudent={this.addStudent}\r\n                  teachers={this.state.teachers}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/teachers/new\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <TeacherForm\r\n                  {...props}\r\n                  addTeacher={this.addTeacher}\r\n                  schools={this.state.schools}\r\n                  teachers={this.state.teachers}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/teachers/:teacherId(\\d+)\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <TeacherDetail\r\n                  {...props}\r\n                  deleteTeacher={this.deleteTeacher}\r\n                  teachers={this.state.teachers}\r\n                  students={this.state.students}\r\n                  schools={this.state.schools}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/teachers\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <TeacherList\r\n                  schools={this.state.schools}\r\n                  teachers={this.state.teachers}\r\n                  loadTeachers={this.getAllTeachers}\r\n                  {...props}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/schools/:schoolId(\\d+)\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <SchoolDetail\r\n                  {...props}\r\n                  schools={this.state.schools}\r\n                  teachers={this.state.teachers}\r\n                  students={this.state.students}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          render={(props) => {\r\n            if (this.isAuthenticated()) {\r\n              return (\r\n                <SearchResults\r\n                  {...props}\r\n                  {...this.props}\r\n                  schools={this.state.schools}\r\n                  teachers={this.state.teachers}\r\n                  students={this.state.students}\r\n                  classrooms={this.state.classrooms}\r\n                  //searchResults={this.props.searchResults}\r\n                  //searchInput={this.props.searchInput}\r\n                />\r\n              );\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ApplicationViews);\r\n","import Settings from \"./Settings\";\r\n\r\nexport default {\r\n\r\n\r\n  getById(id, dataset, embedItem) {\r\n    return fetch(`${Settings.remoteURL}/${dataset}/${id}?${embedItem}`).then((r) =>\r\n      r.json()\r\n    );\r\n  },\r\n\r\n  getAll(dataset, embedItem) {\r\n    return fetch(`${Settings.remoteURL}/${dataset}?${embedItem}`).then((r) =>\r\n      r.json()\r\n    );\r\n  },\r\n\r\n  post(dataset, newObject) {\r\n    return fetch(`${Settings.remoteURL}/${dataset}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newObject)\r\n    }).then((r) => r.json());\r\n  },\r\n\r\n  registerIt(email, password) {\r\n    return fetch(\r\n      `${Settings.remoteURL}/users?email=${email}&password=${password}`\r\n    ).then((response) => response.json());\r\n    },\r\n\r\n\r\n    search(resource, input) {\r\n      return fetch(`${Settings.remoteURL}/${resource}?name_like=${input}`).then(\r\n        (e) => e.json()\r\n      );\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport NavBar from \"./nav/NavBar\";\r\nimport ApplicationViews from \"./ApplicationViews\";\r\nimport JsonManager from '../modules/JsonManager';\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\nimport \"./Plato.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Plato extends Component {\r\n\r\n  state = {\r\n    searchResults: [],\r\n    searchInput: \"\",\r\n   \r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.populateAppState = this.populateAppState.bind(this);\r\n}\r\nhandleSearch(input) {\r\n  console.log(input.target.value);\r\n  // only search on enter/return keypress\r\n  if (input.keyCode === 13) {\r\n    console.log(\"HANDLE SEARCH - INPUT TARGET VALUE:\", input.target.value);\r\n    this.props.getSearchResults(input.target.value);\r\n    this.props.history.push(\"/search\");\r\n  }\r\n}\r\n\r\ngetSearchResults = input => {\r\n  // console.log(\"GETSEARCH INPUT:\", input);\r\n  this.setState({ searchInput: input });\r\n  let newSearchResults = [];\r\n  JsonManager.search(\"students\", input)\r\n    .then(results => (newSearchResults = results))\r\n    //  * include search across all sections below\r\n    .then(() => JsonManager.search(\"teachers\", input))\r\n    .then(results => results.forEach(result => newSearchResults.push(result)))\r\n    .then(() => JsonManager.search(\"schools\", input))\r\n    .then(results => results.forEach(result => newSearchResults.push(result)))\r\n    .then(() => this.setState({ searchResults: newSearchResults }));\r\n};\r\n\r\n\r\n\r\npopulateAppState() {\r\n    JsonManager.getAll(\"users\").then((users) => {\r\n        this.setState({ users: users });\r\n    });\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.populateAppState();\r\n}\r\nregisterIt = (username, password, firstName) => {\r\n    return JsonManager.registerIt(username, password, firstName);\r\n};\r\n\r\ngetAllUsers = () => {\r\n    return JsonManager.getAll(\"users\");\r\n};\r\n\r\naddUser = (user) =>\r\n    JsonManager.post(\"users\", user)\r\n        .then(() => this.populateAppState())\r\n        .then(() => this.registerIt(user.username, user.password));\r\n\r\nisAuthenticated = () => sessionStorage.getItem(\"User\") !== null;\r\n;\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        \r\n        <NavBar\r\n        getSearchResults={this.getSearchResults}\r\n         />\r\n        <ApplicationViews\r\n        populateAppState={this.populateAppState}\r\n        registerIt={this.registerIt}\r\n        getAllUsers={this.getAllUsers}\r\n        addUser={this.addUser} \r\n        searchResults={this.state.searchResults}\r\n          searchInput={this.state.searchInput}\r\n          />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Plato;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport Plato from './components/Plato'\r\nimport Octicon from 'react-octicon'\r\n//import {HashRouter} from \"react-router-dom\"\r\n//import { Navbar, Nav,  NavDropdown, Button, Form, FormControl } from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Plato />\r\n    </Router>\r\n    , document.getElementById('root'))"],"sourceRoot":""}