{"version":3,"sources":["components/nav/LOGO.jpg","components/student/students.gif","components/school/schools.gif","components/teacher/teachers.gif","components/nav/NavBar.js","modules/Settings.js","modules/OwnerManager.js","modules/SchoolManager.js","modules/TeacherManager.js","modules/ClassroomManager.js","modules/ClassroomTeacherManager.js","modules/ClassroomStudentManager.js","components/classroom/ClassroomList.js","components/classroom/ClassroomForm.js","components/classroom/ClassroomAssignment.js","components/student/StudentForm.js","modules/StudentManager.js","components/student/StudentEditForm.js","components/student/StudentCard.js","components/student/StudentList.js","components/student/StudentDetail.js","components/school/SchoolList.js","components/teacher/TeacherCard.js","components/school/SchoolDetail.js","components/search/SearchResults.js","components/teacher/TeacherList.js","components/teacher/TeacherEditForm.js","components/teacher/TeacherDetail.js","components/teacher/TeacherForm.js","users/Login.js","users/Register.js","components/auth/AuthRoute.js","components/ApplicationViews.js","modules/JsonManager.js","components/Plato.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showLogout","sessionStorage","getItem","react_default","a","createElement","className","to","onClick","logout","toggle","bind","assertThisInitialized","onMouseEnter","onMouseLeave","routeChange","state","dropdownOpen","input","console","log","target","value","keyCode","getSearchResults","history","push","setState","prevState","clear","window","location","href","_this2","src","LOGO","alt","Dropdown","id","onMouseOver","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","tag","Link","react_router_dom","type","aria-label","aria-describedby","onKeyUp","e","handleSearch","Component","withRouter","Settings","remoteURL","OwnerManager","fetch","concat","then","json","SchoolManager","get","delete","method","getAll","TeacherManager","addTeacher","newTeacher","headers","Content-Type","body","JSON","stringify","data","updateTeacher","editedTeacher","ClassroomManager","addClassroom","newClassroom","updateClassroom","editedClassroom","ClassroomTeacherManager","addClassroomTeacher","newClassroomTeacher","ClassroomStudentManager","addClassroomStudent","newClassroomStudent","ClassroomList","prevProps","Fragment","classrooms","map","business","key","classroom","name","ClassroomForm","classroomName","room","days","hours","position","category","saveEnabled","handleFieldChange","evt","stateToChange","constructNewClassroom","preventDefault","teacherId","alert","htmlFor","required","autoFocus","onChange","placeholder","disabled","ClassroomAssignments","classroomId","studentId","constructNewClassroomStudent","classroomStudent","parseInt","match","params","loadClassroomStudents","constructNewClassroomTeacher","classroomTeacher","find","grade","deleteClassroom","multiple","teachers","onDoubleClick","classroomTeachers","filter","ct","teacher","deleteClassroomTeacher","students","classroomStudents","student","deleteClassroomStudent","StudentForm","studentName","parentContact","constructNewStudent","addStudent","defaultValue","StudentManager","newStudent","updateStudent","editedStudent","StudentEditForm","updateExistingStudent","StudentCard","StudentList","student_StudentCard","deleteStudent","owners","studentOwners","StudentDetail","saveDisabled","SchoolList","schools","TeacherCard","SchoolDetail","school","schoolId","phone","numberStudents","std","teacher_TeacherCard","assign","SearchResults","searchResults","length","searchInput","result","TeacherList","TeacherEditForm","email","subjects","size","TeacherDetail","deleteTeacher","TeacherForm","teacherName","constructNewTeacher","Login","password","onLogin","registerIt","allUsers","forEach","user","loggedIn","setItem","fullname","populateAppState","removeItem","Form","FormGroup","Label","Input","for","Button","Register","getAllUsers","newUser","addUser","color","AuthRoute","_ref","path","Destination","superProps","objectWithoutProperties","react_router","exact","render","ApplicationViews","_redirectToClassroomList","_callee","regenerator_default","wrap","_context","prev","next","sent","stop","_redirectToStudentList","_callee2","_context2","_redirectToTeacherList","_callee3","_context3","_callee4","_context4","_callee5","_context5","getAllClassroomTeachers","_callee6","_context6","getAllClassroomStudents","_callee7","_context7","_callee8","_context8","_callee9","_context9","_callee10","_context10","_callee11","_context11","_callee12","_context12","updateClassroomTeacher","_callee13","_context13","updateClassroomStudent","_callee14","_context14","_callee15","_context15","getOneTeacher","_callee16","_context16","t0","t1","t2","getOneStudent","_callee17","_context17","getAllClassrooms","_callee18","_context18","_callee19","_context19","_callee20","_context20","getAllSchools","_callee21","_context21","getAllStudents","_callee22","_context22","getAllTeachers","_callee23","_context23","isAuthenticated","newState","r","_this3","auth_AuthRoute","loadStudents","loadClassrooms","loadClassroomTeachers","Exact","ClassroomAssignment","Register_Register","users","src_users_Login","StudentDetail_StudentDetail","TeacherEditForm_TeacherEditForm","StudentEditForm_StudentEditForm","StudentForm_StudentForm","TeacherForm_TeacherForm","TeacherDetail_TeacherDetail","components_teacher_TeacherList","loadTeachers","SchoolDetail_SchoolDetail","search_SearchResults","JsonManager","getById","dataset","embedItem","post","newObject","response","search","resource","Plato","newSearchResults","results","username","firstName","components_nav_NavBar","components_ApplicationViews","ReactDOM","src_components_Plato","document","getElementById"],"mappings":"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","file":"static/js/main.d059c5bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.75d208e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/students.5178bbd6.gif\";","module.exports = __webpack_public_path__ + \"static/media/schools.59a7254b.gif\";","module.exports = __webpack_public_path__ + \"static/media/teachers.a950f890.gif\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\";\nimport \"./NavBar.css\";\nimport LOGO from \"./LOGO.jpg\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.routeChange = this.routeChange.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  handleSearch(input) {\n    console.log(input.target.value);\n    // only search on enter/return keypress\n    if (input.keyCode === 13) {\n      console.log(\"HANDLE SEARCH - INPUT TARGET VALUE:\", input.target.value);\n      this.props.getSearchResults(input.target.value);\n      this.props.history.push(\"/search\");\n    }\n  }\n\n  routeChange() {\n    let path = ``;\n    this.props.history.push(path);\n  }\n\n  toggle() {\n    this.setState((prevState) => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  onMouseEnter() {\n    this.setState({ dropdownOpen: true });\n  }\n\n  onMouseLeave() {\n    this.setState({ dropdownOpen: false });\n  }\n\n  logout() {\n    sessionStorage.clear();\n    window.location.href = \"/\";\n  }\n\n  showLogout = () => {\n    if (sessionStorage.getItem(\"Fullname\") !== null) {\n      return (\n        <button\n          className=\"logout btn btn-danger \"\n          to={\"/\"}\n          onClick={this.logout}\n        >\n          Log Out\n        </button>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <nav>\n        {this.showLogout()}\n\n        <ul\n          className=\"nav  mr-auto nav-justified font-weight-bold bg-muted\n       \"\n        >\n          <img className=\"img\" src={LOGO} alt=\"\" />\n          <Dropdown\n            id=\"Dropdown\"\n            className=\" font-weight-bold\"\n            onMouseOver={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n            isOpen={this.state.dropdownOpen}\n            toggle={this.toggle}\n          >\n            <DropdownToggle id=\"Dropdown\" caret>\n              <strong>School Data</strong>\n            </DropdownToggle>\n            <DropdownMenu className=\"DropdownMenu\">\n              <DropdownItem header>The Plato</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/schools\">\n                Schools\n              </DropdownItem>\n\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/teachers\">\n                Teachers\n              </DropdownItem>\n\n              <DropdownItem className=\"DropdownItem\" tag={Link} to=\"/students\">\n                Students\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          \n          <li className=\"nav-item\">\n            <Link className=\"link-1\" to=\"/classrooms\">\n              Classrooms\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"link-1 \" to=\"/search\">\n              Search\n            </Link>\n            <input\n              type=\"\"\n              className=\"search\"\n              aria-label=\"\"\n              aria-describedby=\"\"\n              onKeyUp={(e) => this.handleSearch(e)}\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","export default {\r\n  remoteURL:\r\n    process.env.NODE_ENV === \"production\"?\"/api\":\"http://localhost:5002/api\"\r\n};\r\n","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/owners/${id}`)\n        .then(e => e.json());\n  },\n  delete(id) {\n    return fetch(`${Settings.remoteURL}/owners/${id}`, {\n      method: \"DELETE\"\n    }).then(e => e.json());\n  },\n  getAll() {\n    return fetch(`${Settings.remoteURL}/owners`)\n        .then(e => e.json());\n  }\n}","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/schools/${id}`).then((e) => e.json());\n  },\n  delete(id) {\n    return fetch(`${Settings.remoteURL}/schools/${id}`, {\n      method: \"DELETE\"\n    }).then((e) => e.json());\n  },\n\n  getAll() {\n    return fetch(`${Settings.remoteURL}/schools`).then((e) => e.json());\n  }\n};\n","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/teachers/${id}`).then((e) => e.json());\n  },\n  delete(id) {\n    return fetch(`${Settings.remoteURL}/teachers/${id}`, {\n      method: \"DELETE\"\n    }).then((e) => e.json());\n  },\n  getAll() {\n    return fetch(`${Settings.remoteURL}/teachers?_expand=school`).then((e) =>\n      e.json()\n    );\n  },\n  addTeacher(newTeacher) {\n    return fetch(`${Settings.remoteURL}/teachers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTeacher)\n    }).then((data) => data.json());\n  },\n  updateTeacher(editedTeacher) {\n    return fetch(`${Settings.remoteURL}/teachers/${editedTeacher.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedTeacher)\n    }).then((data) => data.json());\n  }\n};\n","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/classrooms/${id}`).then(e => e.json());\n},\ndelete(id) {\n    return fetch(`${Settings.remoteURL}/classrooms/${id}`, {\n        \"method\": \"DELETE\"\n    }).then(e => e.json());\n},\ngetAll() {\n    return fetch(`${Settings.remoteURL}/classrooms`).then(e => e.json());\n},\naddClassroom(newClassroom) {\n    return fetch(`${Settings.remoteURL}/classrooms`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newClassroom)\n    }).then(data => data.json())\n},\nupdateClassroom(editedClassroom) {\n    return fetch(`${Settings.remoteURL}/classrooms/${editedClassroom.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedClassroom)\n    }).then(data => data.json());\n}\n};\n","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/classroomTeachers?_expand=teacher/${id}`).then((e) => e.json());\n  },\n  delete(id) {\n    return fetch(`${Settings.remoteURL}/classroomTeachers/${id}`, {\n      method: \"DELETE\"\n    }).then((e) => e.json());\n  },\n\n  getAll() {\n    return fetch(`${Settings.remoteURL}/classroomTeachers?_expand=teacher`).then((e) => e.json());\n  },\n\n\naddClassroomTeacher(newClassroomTeacher) {\n    return fetch(`${Settings.remoteURL}/classroomTeachers`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newClassroomTeacher)\n    }).then(data => data.json())\n}\n}","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/classroomStudents?_expand=student/${id}`).then((e) => e.json());\n  },\n  delete(id) {\n    return fetch(`${Settings.remoteURL}/classroomStudents/${id}`, {\n      method: \"DELETE\"\n    }).then((e) => e.json());\n  },\n\n  getAll() {\n    return fetch(`${Settings.remoteURL}/classroomStudents?_expand=student`).then((e) => e.json());\n  },\n\n\naddClassroomStudent(newClassroomStudent) {\n    return fetch(`${Settings.remoteURL}/classroomStudents`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newClassroomStudent)\n    }).then(data => data.json())\n}\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Classrooms.css\";\n\n//import ClassroomForm from \"./ClassroomForm\";\n\nclass ClassroomList extends Component {\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <section>\n          <center>\n            <h2>Classrooms</h2>\n\n            <button\n              type=\"button\"\n              className=\"addnewclass btn btn-warning\"\n              onClick={() => {\n                this.props.history.push(\"/classrooms/new\");\n              }}\n            >\n              Add a New Classroom\n            </button>\n          </center>\n          <div className=\"right list-group-item bg-transparent\">\n            {this.props.classrooms.map((business) => (\n              <div\n                key={`classroom-${business.id}`}\n                classroom={business}\n                history={this.props.history}\n              >\n                <div className=\"teacherlistname\">\n                  <Link\n                    className=\"teacher-link\"\n                    to={`/classrooms/${business.id}`}\n                  >\n                    {business.name}\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ClassroomList;\n","import React, { Component } from \"react\";\n\nexport default class ClassroomForm extends Component {\n  // Set initial state\n  state = {\n    classroomName: \"\",\n    room: \"\",\n    days: \"\",\n    hours: \"\",\n    position: \"CLASSROOM\",\n    category: \"classrooms\",\n    saveEnabled: false\n  };\n\n  // Update state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*\n        Local method for validation, creating student object, and\n        invoking the function reference passed from parent component\n     */\n  constructNewClassroom = (evt) => {\n    evt.preventDefault();\n    if (this.state.teacherId === null) {\n      window.alert(\"Please select a teacher\");\n    } else {\n      const classroom = {\n        name: this.state.classroomName,\n        room: this.state.room,\n        days: this.state.days,\n        hours: this.state.hours,\n        position: \"CLASSROOM\",\n        category: \"classrooms\"\n      };\n\n      // Create the student and redirect user to student list\n      this.props.addClassroom(classroom);\n\n      this.setState({ saveEnabled: true });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"inputstudent studentForm\">\n          <div className=\"form-group\">\n            <label htmlFor=\"classroomName\">Classroom name</label>\n            <input\n              type=\"text\"\n              required\n              autoFocus\n              onChange={this.handleFieldChange}\n              className=\"form-control\"\n              id=\"classroomName\"\n              placeholder=\"Classroom name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"room\">Room</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"room\"\n              placeholder=\"Classroom room\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"days\">Meeting Days</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"days\"\n              placeholder=\"Meeting Days\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"hours\">Meeting Hours</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"hours\"\n              placeholder=\"Meeting Hours\"\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            disabled={\n            !this.state.classroomName||\n            !this.state.room ||\n            !this.state.days||\n            !this.state.hours ||\n            this.state.saveEnabled\n            }\n            onClick={this.constructNewClassroom}\n            className=\"btn btn-primary\"\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Classrooms.css\";\n\nclass ClassroomAssignments extends Component {\n  state = {\n    classroomId: \"\",\n    teacherId: \"\",\n\n    saveEnabled: false\n  };\n  state = {\n    studentId: \"\",\n    classroomId: \"\",\n    saveEnabled: false\n  };\n\n  // Update state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*\n            Local method for validation, creating class object, and\n            invoking the function reference passed from parent component\n         */\n\n  constructNewClassroomStudent = (evt) => {\n    evt.preventDefault();\n    if (this.state.classroomId === null) {\n      window.alert(\"Please select a class\");\n    } else {\n      const classroomStudent = {\n        studentId: parseInt(this.state.studentId),\n        classroomId: parseInt(this.props.match.params.classroomId)\n      };\n\n      this.props.addClassroomStudent(classroomStudent);\n      this.props.loadClassroomStudents();\n\n      //this.props.history.push(\"/classrooms\");\n      //window.location.href = \"/classrooms\";\n      this.setState({ saveEnabled: true });\n    }\n  };\n\n  constructNewClassroomTeacher = (evt) => {\n    //evt.preventDefault();\n    if (this.state.classroomId === null) {\n      window.alert(\"Please select a class\");\n    } else {\n      const classroomTeacher = {\n        teacherId: parseInt(this.state.teacherId),\n        classroomId: parseInt(this.props.match.params.classroomId)\n      };\n\n      this.props.addClassroomTeacher(classroomTeacher);\n\n      //this.props.history.push(\"/classrooms\");\n      //window.location.href = \"/classrooms\";\n      this.setState({ saveEnabled: true });\n    }\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const classroom = this.props.classrooms.find(\n      (a) => a.id === parseInt(this.props.match.params.classroomId)\n    ) || { id: 404, name: \"404\", grade: \"Teacher not found\" };\n\n    return (\n      <React.Fragment>\n        <div className=\"classdetails\">\n          <h2>\n            {classroom.name}\n            <span\n              className=\"octicon  octicon-trashcan\"\n              onClick={\n                () => this.props.deleteClassroom(classroom.id)\n                //.then(() => this.props.history.push(\"/clasrooms\"))\n              }\n            />\n          </h2>\n          <h5>Room: {classroom.room}</h5>\n          <h5>Days :{classroom.days}</h5>\n          <h5 className=\"classdetails\">Hours : {classroom.hours}</h5>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"column\">\n            <div className=\"\">\n              <h4>Assign Teachers</h4>\n              <select\n                className=\"selectlist\"\n                multiple={true}\n                value={this.props.value}\n                name=\"teacher\"\n                id=\"teacherId\"\n                onChange={this.handleFieldChange}\n              >\n                {this.props.teachers.map((e) => (\n                  <option\n                    onDoubleClick={this.constructNewClassroomTeacher}\n                    key={e.id}\n                    id={e.id}\n                    value={e.id}\n                  >\n                    {e.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"alignlefttselect\">\n              <h3>Teachers Assigned</h3>\n              {this.props.classroomTeachers\n                .filter((ct) => ct.classroomId === classroom.id)\n                .map((ct) => (\n                  <div\n                    className=\"studentcard\"\n                    key={ct.id}\n                    id={ct.id}\n                    value={ct.id}\n                    history={this.props.history}\n                  >\n                    <div className=\"studentname\">\n                      <Link className=\"\" to={`/teachers/${ct.teacherId}`}>\n                        {ct.teacher.name}\n                      </Link>\n\n                      <div className=\"buttons\">\n                        <button\n                          onClick={() =>\n                            this.props.deleteClassroomTeacher(ct.id)\n                          }\n                          className=\"\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\" column\">\n            <h4>Assign Students</h4>\n            <select\n              className=\" selectlist\"\n              multiple={true}\n              value={this.props.value}\n              name=\"student\"\n              id=\"studentId\"\n              onChange={this.handleFieldChange}\n            >\n              {this.props.students.map((e) => (\n                <option\n                  onDoubleClick={this.constructNewClassroomStudent}\n                  key={e.id}\n                  id={e.id}\n                  value={e.id}\n                >\n                  {e.name}\n                </option>\n              ))}\n            </select>\n\n            <div className=\"alignright \">\n              <h3>Students Assigned</h3>\n              {this.props.classroomStudents\n                .filter((ct) => ct.classroomId === classroom.id)\n                .map((ct) => (\n                  <div\n                    className=\"studentcard\"\n                    key={ct.id}\n                    id={ct.id}\n                    value={ct.id}\n                    history={this.props.history}\n                  >\n                    <div className=\"studentname\">\n                      <Link className=\"\" to={`/students/${ct.studentId}`}>\n                        {ct.student.name}\n                      </Link>\n\n                      <div className=\"buttons\">\n                        <button\n                          onClick={() =>\n                            this.props.deleteClassroomStudent(ct.id)\n                          }\n                          className=\"\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ClassroomAssignments;\n","import React, { Component } from \"react\";\nimport \"./Student.css\";\n\nexport default class StudentForm extends Component {\n  // Set initial state\n  state = {\n    studentName: \"\",\n    grade: \"\",\n    parentContact: \"\",\n    teacherId: \"\",\n    position: \"STUDENT\",\n    category: \"students\",\n    saveEnabled: false\n  };\n\n  // Update state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*\n        Local method for validation, creating student object, and\n        invoking the function reference passed from parent component\n     */\n  constructNewStudent = (evt) => {\n    evt.preventDefault();\n    if (this.state.teacherId === null) {\n      window.alert(\"Please select a teacher\");\n    } else {\n      const student = {\n        name: this.state.studentName,\n        grade: this.state.grade,\n        parentContact: this.state.parentContact,\n        position: \"STUDENT\",\n        category: \"students\",\n        teacherId: parseInt(this.state.teacherId),\n      };\n\n      // Create the student and redirect user to student list\n      this.props.addStudent(student);\n\n      this.setState({ saveEnabled: true });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"inputstudent studentForm\">\n          <div className=\"form-group\">\n            <label htmlFor=\"studentName\">Student name</label>\n            <input\n              type=\"text\"\n              required\n              autoFocus\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"studentName\"\n              placeholder=\"Student name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"grade\">Grade</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"grade\"\n              placeholder=\"Student grade\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"parentContact\">Parent Information</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"parentContact\"\n              placeholder=\"Parent Information\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"teacher\">Assign to a Teacher</label>\n            <select\n              defaultValue=\"\"\n              name=\"teacher\"\n              id=\"teacherId\"\n              onChange={this.handleFieldChange}\n            >\n              <option value=\"\">Select an teacher</option>\n              {this.props.teachers.map((e) => (\n                <option key={e.id} id={e.id} value={e.id}>\n                  {e.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            disabled={\n              !this.state.studentName ||\n              !this.state.grade ||\n              !this.state.parentContact|| \n              !this.state.teacherId ||\n              this.state.saveEnabled\n            }\n            onClick={this.constructNewStudent}\n            className=\"btn btn-primary\"\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}","import Settings from \"./Settings\";\n\nexport default {\n  get(id) {\n    return fetch(`${Settings.remoteURL}/students/${id}`).then((e) => e.json());\n  },\n    delete(id) {\n        return fetch(`${Settings.remoteURL}/students/${id}`, {\n            \"method\": \"DELETE\"\n        }).then(e => e.json());\n    },\n    getAll() {\n        return fetch(`${Settings.remoteURL}/students?_expand=teacher`).then(e => e.json());\n    },\n    addStudent(newStudent) {\n        return fetch(`${Settings.remoteURL}/students`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newStudent)\n        }).then(data => data.json())\n    },\n    updateStudent(editedStudent) {\n        return fetch(`${Settings.remoteURL}/students/${editedStudent.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(editedStudent)\n        }).then(data => data.json());\n    }\n};\n","import React, { Component } from \"react\";\nimport StudentManager from \"../../modules/StudentManager\";\n\nexport default class StudentEditForm extends Component {\n  // Set initial state\n  state = {\n    studentName: \"\",\n    grade: \"\",\n    parentContact: \"\",\n    teacherId: \"\",\n    position: \"STUDENT\",\n    category: \"students\"\n \n  };\n\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  updateExistingStudent = (evt) => {\n    evt.preventDefault();\n\n    if (this.state.teacher === \"\") {\n      window.alert(\"Please select a teacher\");\n    } else {\n      const editedStudent = {\n        id: this.props.match.params.studentId,\n        name: this.state.studentName,\n        grade: this.state.grade,\n        parentContact: this.state.parentContact,\n        position: \"STUDENT\",\n        category: \"students\",\n        teacherId: parseInt(this.state.teacherId)\n      };\n\n      this.props\n        .updateStudent(editedStudent)\n        .then(() => this.props.history.push(\"/students\"));\n    }\n  };\n\n  componentDidMount() {\n    StudentManager.get(this.props.match.params.studentId).then((student) => {\n      this.setState({\n        studentName: student.name,\n        grade: student.grade,\n        parentContact: student.parentContact,\n        teacherId: student.teacherId,\n        position: \"STUDENT\",\n        classroomId: \"Not Assigned\",\n      category: \"students\",\n      });\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"inputstudent studentForm\">\n          <div className=\"form-group\">\n            <label htmlFor=\"studentName\">Student name</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"studentName\"\n              value={this.state.studentName}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"grade\">Grade</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"grade\"\n              value={this.state.grade}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"parentContact\">Parent Information</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"parentContact\"\n              value={this.state.parentContact}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"teacher\">Assign to a Teacher</label>\n            <select\n              name=\"teacher\"\n              id=\"teacherId\"\n              onChange={this.handleFieldChange}\n              value={this.state.teacherId}\n            >\n              <option value=\"undefined\">Select an teacher</option>\n              {this.props.teachers.map((e) => (\n                <option key={e.id} id={e.id} value={e.id}>\n                  {e.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"button\"\n            disabled={\n              !this.state.studentName ||\n              !this.state.grade ||\n              !this.state.parentContact ||\n              !this.state.teacherId\n            }\n            onClick={this.updateExistingStudent}\n            className=\"btn btn-warning\"\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Student.css\";\n\nclass StudentCard extends Component {\n  componentDidMount() {}\n\n  render() {\n    /* Reference Code\n      const ownerStringArray = this.props.studentOwners\n    .filter((ao) => ao.studentId === this.props.student.id)\n    .map((ao) => this.props.owners.find((o) => o.id === ao.ownerId).name);\n    */\n\n    return (\n      <React.Fragment>\n        <section className=\"\">\n          <div className=\"teacherlistname\" key={this.props.student.id}>\n            <div className=\"\">\n              <Link\n                className=\"teacher-link\"\n                to={`/students/${this.props.student.id}`}\n              >\n                {this.props.student.name}\n              </Link>\n            </div>\n          </div>\n\n          {/*\n              ({ownerStringArray.join(\", \")}) */}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StudentCard;\n","import React, { Component } from \"react\";\nimport \"./StudentList.css\";\nimport StudentCard from \"./StudentCard\";\nimport students from \"./students.gif\";\n//import Octicon from 'react-octicon'\n\nclass StudentList extends Component {\n  componentDidMount() {\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centerChildren\">\n        <img className=\"schoolgif\" src={students} alt=\"\"></img>\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={() => {\n              this.props.history.push(\"/students/new\");\n            }}\n          >\n            Add a New Student\n          </button>\n        </div>\n        <article className=\"list-group-item bg-transparent\">\n          {this.props.students.map((student) => (\n            <StudentCard\n              key={`student-${student.id}`}\n              student={student}\n              deleteStudent={this.props.deleteStudent}\n              owners={this.props.owners}\n              studentOwners={this.props.studentOwners}\n              history={this.props.history}\n            />\n          ))}\n        </article>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StudentList;\n","import React, { Component } from \"react\";\nimport \"./Student.css\";\n//import { Link } from \"react-router-dom\";\n\nexport default class StudentDetail extends Component {\n  state = {\n    saveDisabled: false\n  };\n\n  render() {\n    //const teacher = this.props.teachers.find(a =>\n    // a.id === parseInt(this.props.match.params.teacherId))\n\n    return (\n      <section className=\"student\">\n        <div key={this.props.student.id} className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">{this.props.student.name}</h4>\n            <h6 className=\"card-title\">\n              Student Grade: {this.props.student.grade}\n            </h6>\n            <h6 className=\"card-title\">\n              Parent Information: {this.props.student.parentContact}\n            </h6>\n            {/*<h6 className=\"card-title\">\n              Assigned Teachers: {this.props.student.teacher.name}\n    </h6>*/}\n            <center>\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={() => {\n                  this.props.history.push(\n                    `/students/${this.props.student.id}/edit`\n                  );\n                }}\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => {\n                  this.setState({ saveDisabled: true }, () =>\n                    this.props.deleteStudent(this.props.student.id)\n                  );\n                }}\n                disabled={this.state.saveDisabled}\n                className=\"btn btn-danger\"\n              >\n                <b>Delete:</b> {this.props.student.name}\n              </button>\n            </center>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport schools from \"./schools.gif\"\nimport \"./School.css\";\n\nexport default class SchoolList extends Component {\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"schoolbox \">\n      <img className=\"schoolgif\" src={schools} alt=\"\"></img>\n      <section className=\"list \">\n        {this.props.schools.map((business) => (\n          <div key={business.id} className=\"card \">\n            \n            <div className=\"card-body\">\n              <h4 className=\"card-title \">\n                <Link className=\"text-white\" to={`/schools/${business.id}`}>\n                  {business.name}\n                  \n                </Link>\n              </h4>\n            </div>\n          </div>\n        ))}\n      </section>\n      </div>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass TeacherCard extends Component {\n  render() {\n    /* Reference Code\n          const ownerStringArray = this.props.studentOwners\n        .filter((ao) => ao.studentId === this.props.student.id)\n        .map((ao) => this.props.owners.find((o) => o.id === ao.ownerId).name);\n        */\n\n    return (\n    \n        \n          <div className=\"teacherlistname\">\n        <Link className=\"teacher-link\" to={`/teachers/${this.props.teacher.id}`}>\n                  {this.props.teacher.name} \n                </Link>\n                </div>\n        \n      \n    );\n  }\n}\n\nexport default TeacherCard;\n","import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport TeacherCard from \"../teacher/TeacherCard\";\n\nexport default class SchoolDetail extends Component {\n  render() {\n    const school = this.props.schools.find(\n      (a) => a.id === parseInt(this.props.match.params.schoolId)\n    ) || { id: 404, name: \"404\", grade: \"School not found\" };\n   \n\n\n    return (\n      <section className=\"\">\n        <div key={school.id} className=\"card\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title\">{school.name}</h2>\n            <h6 className=\"card-title\">Address: {school.location}</h6>\n            <h6 className=\"card-title\">Phone Number: {school.phone}</h6>\n            <h6 className=\"card-title\">\n              Number of Students: {school.numberStudents}\n            </h6>\n\n            <section className=\"card\">\n              <div className=\"\">\n              <h5 className=\"card text-white\">Teachers:</h5>\n              <div className=\"card-body\">\n                {this.props.teachers\n                  .filter((std) => std.schoolId === school.id )\n                  .map((std) => (\n                    <TeacherCard key={std.id} teacher={std} {...this.props} />\n                  ))}\n              </div>\n\n              </div>\n\n\n\n            </section>\n\n            <div className=\"\" />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass SearchResults extends Component {\n  render() {\n    // console.log(\"search results props\", this.props.searchResults);\n    if (this.props.searchResults.length > 0) {\n      return (\n        <section className=\" card searchResults\">\n          <h2 className=\"page_title \">\n            Search Results for: \"{this.props.searchInput}\"\n          </h2>\n          {this.props.searchResults.map((result) => (\n            <div\n              key={`${result.id}${result.name}`}\n              className=\"result_card\"\n            >\n              {result.position}:\n              <Link className=\"searchlinks\" to={`${result.category}/${result.id}`}>\n                   {result.name}\n              </Link>\n            </div>\n          ))}\n           \n        \n        </section>\n      );\n    } else {\n      return (\n        <section className=\"card searchResults\">\n          <h1 className=\"page_title\">\n            RESULTS :{this.props.searchInput}\n          </h1>\n        </section>\n      );\n    }\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TeacherList.css\";\nimport \"./Teacher.css\";\n\nimport teachers from \"./teachers.gif\";\n\nclass TeacherList extends Component {\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"centerChildren\">\n          <img className=\"teachergif\" src={teachers} alt=\"\" />\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-warning\"\n              onClick={() => {\n                this.props.history.push(\"/teachers/new\");\n              }}\n            >\n              Add a New Teacher\n            </button>\n          </div>\n        </div>\n\n        <section className=\"list-group-item bg-transparent\">\n          {this.props.teachers.map((teacher) => (\n            <div key={`teacher-${teacher.id}`} teacher={teacher}>\n              <div className=\"teacherlistname\">\n                <Link className=\"teacher-link\" to={`/teachers/${teacher.id}`}>\n                  {teacher.name} ({teacher.school.name})\n                </Link>\n              </div>\n            </div>\n          ))}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TeacherList;\n","import React, { Component } from \"react\";\nimport TeacherManager from \"../../modules/TeacherManager\";\nimport \"./Teacher.css\";\n\nexport default class TeacherEditForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    subjects: \"\",\n    position: \"TEACHER\",\n    category: \"teachers\",\n    school: \"\"\n  };\n\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  updateTeacher = (evt) => {\n    evt.preventDefault();\n\n    if (this.state.teacher === \"\") {\n      window.alert(\"Please select a teacher\");\n    } else {\n      const editedTeacher = {\n        id: this.props.match.params.teacherId,\n        name: this.state.name,\n        email: this.state.email,\n        subjects: this.state.subjects,\n        position: \"TEACHER\",\n        category: \"teachers\",\n        schoolId: parseInt(this.state.schoolId)\n\n        //info: this.state.info\n      };\n\n      this.props\n        .updateTeacher(editedTeacher)\n        .then(() => this.props.history.push(\"/teachers\"));\n    }\n  };\n  componentDidMount() {\n    TeacherManager.get(this.props.match.params.teacherId).then((teachers) => {\n      this.setState({\n        name: teachers.name,\n        email: teachers.email,\n        subjects: teachers.subjects,\n        position: \"TEACHER\",\n        category: \"teachers\",\n        schoolId: teachers.schoolId\n      });\n    });\n  }\n  render() {\n    return (\n      <form className=\"inputteacher teacherForm\">\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Teacher name</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            onChange={this.handleFieldChange}\n            id=\"name\"\n            value={this.state.name || \"\"}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">E-mail</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            onChange={this.handleFieldChange}\n            id=\"email\"\n            value={this.state.email || \"\"}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"subjects\">Subjects</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            onChange={this.handleFieldChange}\n            id=\"subjects\"\n            value={this.state.subjects || \"\"}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"school\">Assign to a School</label>\n          <select\n            name=\"school\"\n            id=\"schoolId\"\n            onChange={this.handleFieldChange}\n            value={this.state.schoolId}\n          >\n            {this.props.schools.map((e) => (\n              <option key={e.id} id={e.id} value={e.id}>\n                {e.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-warning\"\n            size=\"sm\"\n            disabled={\n              !this.state.name ||\n              !this.state.email ||\n              !this.state.subjects ||\n              !this.state.schoolId\n            }\n            onClick={this.updateTeacher}\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Teacher.css\";\nimport StudentCard from \"../student/StudentCard\";\n\n\n//import StudentCard from '../student/StudentCard';\n\nexport default class TeacherDetail extends Component {\n  render() {\n    const teacher = this.props.teachers.find(\n      (a) => a.id === parseInt(this.props.match.params.teacherId)\n    ) || { id: 404, name: \"404\", grade: \"Teacher not found\" };\n\n    return (\n      <section className=\"student\">\n        <div key={teacher.id} className=\"card\">\n          <div className=\"card-body\">\n            <div className=\"teacherdata\">\n              <h4 className=\"teachername\">\n                {teacher.name}\n\n                <span\n                  className=\"octicon octicon-trashcan\"\n                  onClick={() =>\n                    this.props\n                      .deleteTeacher(teacher.id)\n                      .then(() => this.props.history.push(\"/teachers\"))\n                  }\n                />\n                <span\n                  className=\"octicon octicon-pencil\"\n                  onClick={() => {\n                    this.props.history.push(`/teachers/${teacher.id}/edit`);\n                  }}\n                />\n              </h4>\n              <div className=\"teacherinfo\">\n                <h6 className=\"card-title\">E-mail: {teacher.email}</h6>\n                <h6 className=\"card-title\">Subjects: {teacher.subjects}</h6>\n                {/*<h6 className=\"card-title\">School: {teacher.school.name}</h6>*/}\n              </div>\n            </div>\n\n            <div className=\"\" />\n\n            <h6 className=\"page-header studentdetails\">Students:</h6>\n\n            {this.props.students\n              .filter((std) => std.teacherId === teacher.id)\n              .map((std) => (\n                <StudentCard key={std.id} student={std} {...this.props} />\n              ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Teacher.css\";\n\nexport default class TeacherForm extends Component {\n  // Set initial state\n  state = {\n    teacherName: \"\",\n    email: \"\",\n    subjects: \"\",\n    schoolId: \"\",\n    position: \"TEACHER\",\n    category: \"teachers\",\n    saveEnabled: false\n  };\n\n  // Update state whenever an input field is edited\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*\n        Local method for validation, creating teacher object, and\n        invoking the function reference passed from parent component\n     */\n  constructNewTeacher = (evt) => {\n    evt.preventDefault();\n    if (this.state.school === \"\") {\n      window.alert(\"Please select a teacher\");\n    } else {\n      const teacher = {\n      \n        name: this.state.teacherName,\n        email: this.state.email,\n        subjects: this.state.subjects,\n        position: \"TEACHER\",\n        category: \"teachers\",\n        schoolId: parseInt(this.state.schoolId)\n      };\n\n      // Create the teacher and redirect user to teacher list\n      this.props.addTeacher(teacher);\n\n      this.setState({ saveEnabled: true });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form className=\"inputteacher teacherForm\">\n          <div className=\"form-group\">\n            <label htmlFor=\"teacherName\">Teacher name</label>\n            <input\n              type=\"text\"\n              required\n              autoFocus\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"teacherName\"\n              placeholder=\"Teacher name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"email\"\n              placeholder=\"Teacher Email\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"subjects\">Subjects</label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              onChange={this.handleFieldChange}\n              id=\"subjects\"\n              placeholder=\"Subjects\"\n              value={this.state.subjects}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"school\">Assign to a School</label>\n            <select\n              defaultValue=\"\"\n              name=\"school\"\n              id=\"schoolId\"\n              onChange={this.handleFieldChange}\n            >\n              <option value=\"\">Select a School</option>\n              {this.props.schools.map((e) => (\n                <option key={e.id} id={e.id} value={e.id}>\n                  {e.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          <button\n            type=\"submit\"\n            disabled={\n              !this.state.teacherName ||\n              !this.state.email ||\n              !this.state.subjects ||\n              !this.state.schoolId ||\n              this.state.saveEnabled\n            }\n            onClick={this.constructNewTeacher}\n            className=\"btn btn-warning\"\n          >\n            Submit\n          </button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  onLogin = (evt) => {\n    evt.preventDefault();\n    this.props\n      .registerIt(this.state.email, this.state.password)\n      .then((allUsers) => {\n        if (allUsers.length < 1) {\n          alert(\"No Users Found or Incorrect Info\");\n        } else {\n          allUsers.forEach((user) => {\n            let loggedIn = false;\n            if (\n              this.state.email === user.email &&\n              this.state.password === user.password\n            ) {\n              loggedIn = true;\n            }\n            if (loggedIn === true) {\n              sessionStorage.setItem(\"User\", user.id);\n              sessionStorage.setItem(\"Fullname\", user.fullname);\n              this.props.populateAppState();\n              this.props.history.push(\"/schools\");\n            }\n          });\n        }\n      });\n  };\n\n  componentDidMount() {\n    if (sessionStorage.getItem(\"User\") !== null) {\n      sessionStorage.removeItem(\"User\");\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>Welcome</h2>\n\n        <Form className=\"inputstudent form\">\n          <FormGroup>\n            <Label>Email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"email\"\n              placeholder=\"Email\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"password\"\n              placeholder=\"********\"\n            />\n          </FormGroup>\n          <Button\n            className=\"btn btn-warning\"\n            type=\"submit\"\n            onClick={this.onLogin}\n          >\n            Sign In\n          </Button>\n          <br />\n          Not a User?{\" \"}\n          <Link className=\"registerlink\" to=\"/register\">\n            Sign Up\n          </Link>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nexport default class Register extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    fullname: \"\"\n  };\n\n  handleFieldChange = (evt) => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  getAllUsers = (evt) => {\n    evt.preventDefault();\n    this.props.getAll().then((allUsers) => {\n      let usersArray = allUsers.filter((user) => {\n        return user.email === this.state.email;\n      });\n\n      if (usersArray.length > 0) {\n        alert(\"Please use different email\");\n      } else {\n        const newUser = {\n          email: this.state.email,\n          password: this.state.password,\n          fullname: this.state.fullname\n        };\n        this.props.addUser(newUser);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <p>Register a new account</p>\n        <Form className=\"inputstudent form\">\n          <FormGroup>\n            <Label>Email:</Label>\n            <Input\n              type=\"email\"\n              required\n              onChange={this.handleFieldChange}\n              name=\"email\"\n              value={this.state.email}\n              id=\"email\"\n              placeholder=\"myemail@email.com\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label>Password:</Label>\n            <Input\n              type=\"password\"\n              required\n              onChange={this.handleFieldChange}\n              value={this.state.password}\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"********\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label>FullName:</Label>\n            <Input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              value={this.state.fullname}\n              name=\"fullname\"\n              id=\"fullname\"\n              placeholder=\"Full Name\"\n            />\n          </FormGroup>\n\n          <Button\n            type=\"button\"\n            disabled={\n              !this.state.email || !this.state.password || !this.state.fullname\n            }\n            color=\"primary\"\n            onClick={this.getAllUsers}\n          >\n            {\" \"}\n            Register{\" \"}\n          </Button>\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n//import Login from \"../../users/Login\"\n\nconst isAuthenticated = () =>\n    \n    sessionStorage.getItem(\"Fullname\") !== null\n\nconst AuthRoute = ({ path, Destination, ...superProps} ) => {\n    return (\n        <Route exact path={path} render={props => {\n            if (isAuthenticated()) {\n                return <Destination {...props} {...superProps} />\n            } else {\n                return <Redirect to=\"/\" />\n            }\n        }} />\n    )\n}\n\nexport default AuthRoute","import React, { Component } from \"react\";\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nimport OwnerManager from \"../modules/OwnerManager\";\nimport SchoolManager from \"../modules/SchoolManager\";\nimport TeacherManager from \"../modules/TeacherManager\";\nimport ClassroomManager from \"../modules/ClassroomManager\";\nimport ClassroomTeacherManager from \"../modules/ClassroomTeacherManager\";\nimport ClassroomStudentManager from \"../modules/ClassroomStudentManager\";\n\nimport ClassroomList from \"./classroom/ClassroomList\";\nimport ClassroomForm from \"./classroom/ClassroomForm\";\nimport ClassroomAssignment from \"./classroom/ClassroomAssignment\";\n\nimport StudentForm from \"./student/StudentForm\";\nimport StudentEditForm from \"./student/StudentEditForm\";\nimport StudentManager from \"../modules/StudentManager\";\nimport StudentList from \"./student/StudentList\";\nimport StudentDetail from \"./student/StudentDetail\";\n\nimport SchoolList from \"./school/SchoolList\";\nimport SchoolDetail from \"./school/SchoolDetail\";\n\nimport SearchResults from \"./search/SearchResults\";\n\nimport TeacherList from \"./teacher/TeacherList\";\nimport TeacherEditForm from \"./teacher/TeacherEditForm\";\nimport TeacherDetail from \"./teacher/TeacherDetail\";\nimport TeacherForm from \"./teacher/TeacherForm\";\n\nimport Login from \"../users/Login\";\nimport Register from \"../users/Register\";\nimport AuthRoute from \"./auth/AuthRoute\";\nimport \"./App.css\";\n\nclass ApplicationViews extends Component {\n  state = {\n    owners: [],\n    studentOwners: [],\n    teachers: [],\n    students: [],\n    schools: [],\n    classrooms: [],\n    classroomTeachers: [],\n    classroomStudents: []\n  };\n  _redirectToClassroomList = async () => {\n    const classrooms = await ClassroomManager.getAll();\n    this.props.history.push(\"/classrooms\");\n    this.setState({ classrooms: classrooms });\n  };\n  _redirectToStudentList = async () => {\n    const students = await StudentManager.getAll();\n    this.props.history.push(\"/students\");\n    this.setState({ students: students });\n  };\n  _redirectToTeacherList = async () => {\n    const teachers = await TeacherManager.getAll();\n    this.props.history.push(\"/teachers\");\n    this.setState({ teachers: teachers });\n  };\n\n  deleteStudent = (id) => {\n    StudentManager.delete(id).then(this._redirectToStudentList);\n  };\n\n  deleteTeacher = async (id) => {\n    await TeacherManager.delete(id).then(this._redirectToTeacherList);\n  };\n  deleteClassroomTeacher = async (id) => {\n    await ClassroomTeacherManager.delete(id).then(this.getAllClassroomTeachers);\n  };\n  deleteClassroomStudent = async (id) => {\n    await ClassroomStudentManager.delete(id).then(this.getAllClassroomStudents);\n  };\n  deleteClassroom = (id) => {\n    ClassroomManager.delete(id)\n    .then(this._redirectToClassroomList);\n  };\n\n  addClassroom = async (classroom) => {\n    await ClassroomManager.addClassroom(classroom);\n    this._redirectToClassroomList();\n  };\n\n  addClassroomTeacher = async (classroomTeacher) => {\n    await ClassroomTeacherManager.addClassroomTeacher(classroomTeacher).then(\n      this.getAllClassroomTeachers\n    );\n  };\n\n  addClassroomStudent = async (classroomStudent) => {\n    await ClassroomStudentManager.addClassroomStudent(classroomStudent).then(\n      this.getAllClassroomStudents\n    );\n  };\n\n  addStudent = async (student) => {\n    await StudentManager.addStudent(student);\n    this._redirectToStudentList();\n  };\n\n  addTeacher = async (teacher) => {\n    await TeacherManager.addTeacher(teacher);\n    this._redirectToTeacherList();\n  };\n\n  updateStudent = async (student) => {\n    await StudentManager.updateStudent(student);\n    this._redirectToStudentList();\n  };\n\n  updateClassroomTeacher = async (student) => {\n    await ClassroomManager.updateClassroomTeacher(student);\n    //this._redirectToStudentList();\n  };\n\n  updateClassroomStudent = async (student) => {\n    await ClassroomManager.updateClassroomStudent(student);\n    //this._redirectToStudentList();\n  };\n\n  updateTeacher = async (teacher) => {\n    await TeacherManager.updateTeacher(teacher);\n    this._redirectToTeacherList();\n  };\n\n  getOneTeacher = async () => {\n    this.setState({ teachers: await TeacherManager.get() });\n  };\n  getOneStudent = async () => {\n    this.setState({ students: await StudentManager.get() });\n  };\n\n  getAllClassrooms = async () => {\n    this.setState({ classrooms: await ClassroomManager.getAll() });\n  };\n\n  getAllClassroomTeachers = async () => {\n    this.setState({\n      classroomTeachers: await ClassroomTeacherManager.getAll()\n    });\n  };\n\n  getAllClassroomStudents = async () => {\n    this.setState({\n      classroomStudents: await ClassroomStudentManager.getAll()\n    });\n  };\n  getAllSchools = async () => {\n    this.setState({ students: await SchoolManager.getAll() });\n  };\n\n  getAllStudents = async () => {\n    this.setState({ students: await StudentManager.getAll() });\n  };\n  getAllTeachers = async () => {\n    this.setState({ teachers: await TeacherManager.getAll() });\n  };\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    const newState = {};\n\n    ClassroomManager.getAll().then(\n      (classrooms) => (newState.classrooms = classrooms)\n    );\n\n    ClassroomTeacherManager.getAll().then(\n      (classroomTeachers) => (newState.classroomTeachers = classroomTeachers)\n    );\n\n    ClassroomStudentManager.getAll().then(\n      (classroomStudents) => (newState.classroomStudents = classroomStudents)\n    );\n\n    SchoolManager.getAll()\n      .then((schools) => (newState.schools = schools))\n      .then((schools) => (newState.schools = schools))\n      .then(() => SchoolManager.getAll());\n\n    TeacherManager.getAll()\n      .then((teachers) => (newState.teachers = teachers))\n      .then(() => SchoolManager.getAll())\n      .then((schools) => (newState.schools = schools));\n\n    StudentManager.getAll()\n      .then((students) => (newState.students = students))\n      .then(() => TeacherManager.getAll())\n      .then((teachers) => (newState.teachers = teachers))\n      .then(() => SchoolManager.getAll())\n      .then((schools) => (newState.schools = schools))\n\n      //OWNERS\n      .then(() => OwnerManager.getAll())\n      .then((owners) => (newState.owners = owners))\n      .then(() =>\n        fetch(\"http://localhost:5002/studentOwners\").then((r) => r.json())\n      )\n      .then((studentOwners) => (newState.studentOwners = studentOwners))\n      .then(() => this.setState(newState));\n  }\n\n  isAuthenticated = () => sessionStorage.getItem(\"Fullname\") !== null;\n\n  render() {\n    return (\n      <React.Fragment>\n        <AuthRoute\n          path=\"/schools\"\n          Destination={SchoolList}\n          schools={this.state.schools}\n        />\n        <AuthRoute\n          path=\"/students\"\n          Destination={StudentList}\n          owners={this.state.owners}\n          students={this.state.students}\n          studentOwners={this.state.studentOwners}\n          deleteStudent={this.deleteStudent}\n          loadStudents={this.getAllStudents}\n          teachers={this.state.teachers}\n        />\n        <AuthRoute\n          path=\"/classrooms\"\n          Destination={ClassroomList}\n          classrooms={this.state.classrooms}\n          classroomTeachers={this.state.classroomTeachers}\n          classroomStudents={this.state.classroomStudents}\n          addClassroom={this.addClassroom}\n          deleteClassroomTeacher={this.deleteClassroomTeacher}\n          loadClassrooms={this.getAllClassrooms}\n          students={this.state.students}\n          teachers={this.state.teachers}\n          schools={this.state.schools}\n          addClassroomTeacher={this.addClassroomTeacher}\n          loadClassroomTeachers={this.getAllClassroomTeachers}\n          addClassroomStudent={this.addClassroomStudent}\n          loadClassroomStudents={this.getAllClassroomStudents}\n        />\n\n        <AuthRoute\n          path=\"/classrooms/new\"\n          Destination={ClassroomForm}\n          classrooms={this.state.classrooms}\n          classroomTeachers={this.state.classroomTeachers}\n          addClassroom={this.addClassroom}\n          addClassroomTeacher={this.addClassroomTeacher}\n          loadClassroomTeachers={this.getAllClassroomTeachers}\n          classroomStudents={this.state.classroomStudents}\n          addClassroomStudent={this.addClassroomStudent}\n          loadClassroomStudents={this.getAllClassroomStudents}\n          deleteClassroomTeacher={this.deleteClassroomTeacher}\n          teachers={this.state.teachers}\n          students={this.state.students}\n          schools={this.state.schools}\n        />\n\n\n\n<Route\n          Exact\n          path=\"/classrooms/:classroomId(\\d+)\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <ClassroomAssignment\n                  {...props}\n                  classrooms={this.state.classrooms}\n                  classroomTeachers={this.state.classroomTeachers}\n                  addClassroomTeacher={this.addClassroomTeacher}\n                  loadClassroomTeachers={this.getAllClassroomTeachers}\n                  classroomStudents={this.state.classroomStudents}\n                  deleteClassroomTeacher={this.deleteClassroomTeacher}\n                  deleteClassroom={this.deleteClassroom}\n                  deleteClassroomStudent={this.deleteClassroomStudent}\n                  addClassroomStudent={this.addClassroomStudent}\n                  loadClassroomStudents={this.getAllClassroomStudents}\n                  teachers={this.state.teachers}\n                  students={this.state.students}\n                  schools={this.state.schools}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n\n\n\n\n        <Route\n          path=\"/register\"\n          render={(props) => {\n            return (\n              <Register\n                {...props}\n                addUser={this.props.addUser}\n                users={this.props.users}\n                registerIt={this.props.registerIt}\n                getAll={this.props.getAllUsers}\n              />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => {\n            return (\n              <Login\n                {...props}\n                populateAppState={this.props.populateAppState}\n                registerIt={this.props.registerIt}\n              />\n            );\n          }}\n        />\n        <Route\n          Exact\n          path=\"/students/:studentId(\\d+)\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              const student = this.state.students.find(\n                (a) => a.id === parseInt(props.match.params.studentId)\n              ) || { id: 404, name: \"404\", grade: \"Student not found\" };\n\n              return (\n                <StudentDetail\n                  {...props}\n                  student={student}\n                  deleteStudent={this.deleteStudent}\n                  students={this.state.students}\n                />\n              );\n            } else {\n              return <Login />;\n            }\n          }}\n        />\n        <Route\n          path=\"/teachers/:teacherId(\\d+)/edit\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <TeacherEditForm\n                  {...props}\n                  schools={this.state.schools}\n                  updateTeacher={this.updateTeacher}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          path=\"/students/:studentId(\\d+)/edit\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <StudentEditForm\n                  {...props}\n                  teachers={this.state.teachers}\n                  updateStudent={this.updateStudent}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          path=\"/students/new\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <StudentForm\n                  {...props}\n                  addStudent={this.addStudent}\n                  teachers={this.state.teachers}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          path=\"/teachers/new\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <TeacherForm\n                  {...props}\n                  addTeacher={this.addTeacher}\n                  schools={this.state.schools}\n                  teachers={this.state.teachers}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/teachers/:teacherId(\\d+)\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <TeacherDetail\n                  {...props}\n                  deleteTeacher={this.deleteTeacher}\n                  teachers={this.state.teachers}\n                  students={this.state.students}\n                  schools={this.state.schools}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/teachers\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <TeacherList\n                  schools={this.state.schools}\n                  teachers={this.state.teachers}\n                  loadTeachers={this.getAllTeachers}\n                  {...props}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          exact\n          path=\"/schools/:schoolId(\\d+)\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <SchoolDetail\n                  {...props}\n                  schools={this.state.schools}\n                  teachers={this.state.teachers}\n                  students={this.state.students}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n        <Route\n          path=\"/search\"\n          render={(props) => {\n            if (this.isAuthenticated()) {\n              return (\n                <SearchResults\n                  {...props}\n                  {...this.props}\n                  schools={this.state.schools}\n                  teachers={this.state.teachers}\n                  students={this.state.students}\n                  classrooms={this.state.classrooms}\n                  //searchResults={this.props.searchResults}\n                  //searchInput={this.props.searchInput}\n                />\n              );\n            } else {\n              return <Redirect to=\"/\" />;\n            }\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(ApplicationViews);\n","import Settings from \"./Settings\";\n\nexport default {\n\n\n  getById(id, dataset, embedItem) {\n    return fetch(`${Settings.remoteURL}/${dataset}/${id}?${embedItem}`).then((r) =>\n      r.json()\n    );\n  },\n\n  getAll(dataset, embedItem) {\n    return fetch(`${Settings.remoteURL}/${dataset}?${embedItem}`).then((r) =>\n      r.json()\n    );\n  },\n\n  post(dataset, newObject) {\n    return fetch(`${Settings.remoteURL}/${dataset}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newObject)\n    }).then((r) => r.json());\n  },\n\n  registerIt(email, password) {\n    return fetch(\n      `${Settings.remoteURL}/users?email=${email}&password=${password}`\n    ).then((response) => response.json());\n    },\n\n\n    search(resource, input) {\n      return fetch(`${Settings.remoteURL}/${resource}?name_like=${input}`).then(\n        (e) => e.json()\n      );\n    }\n\n}","import React, { Component } from \"react\";\nimport NavBar from \"./nav/NavBar\";\nimport ApplicationViews from \"./ApplicationViews\";\nimport JsonManager from '../modules/JsonManager';\n\n//import { Link } from \"react-router-dom\";\n\nimport \"./Plato.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Plato extends Component {\n\n  state = {\n    searchResults: [],\n    searchInput: \"\",\n   \n  };\n\n  constructor(props) {\n    super(props);\n    this.populateAppState = this.populateAppState.bind(this);\n}\nhandleSearch(input) {\n  console.log(input.target.value);\n  // only search on enter/return keypress\n  if (input.keyCode === 13) {\n    console.log(\"HANDLE SEARCH - INPUT TARGET VALUE:\", input.target.value);\n    this.props.getSearchResults(input.target.value);\n    this.props.history.push(\"/search\");\n  }\n}\n\ngetSearchResults = input => {\n  // console.log(\"GETSEARCH INPUT:\", input);\n  this.setState({ searchInput: input });\n  let newSearchResults = [];\n  JsonManager.search(\"students\", input)\n    .then(results => (newSearchResults = results))\n    //  * include search across all sections below\n    .then(() => JsonManager.search(\"teachers\", input))\n    .then(results => results.forEach(result => newSearchResults.push(result)))\n    .then(() => JsonManager.search(\"schools\", input))\n    .then(results => results.forEach(result => newSearchResults.push(result)))\n    .then(() => this.setState({ searchResults: newSearchResults }));\n};\n\n\n\npopulateAppState() {\n    JsonManager.getAll(\"users\").then((users) => {\n        this.setState({ users: users });\n    });\n}\n\ncomponentDidMount() {\n    this.populateAppState();\n}\nregisterIt = (username, password, firstName) => {\n    return JsonManager.registerIt(username, password, firstName);\n};\n\ngetAllUsers = () => {\n    return JsonManager.getAll(\"users\");\n};\n\naddUser = (user) =>\n    JsonManager.post(\"users\", user)\n        .then(() => this.populateAppState())\n        .then(() => this.registerIt(user.username, user.password));\n\nisAuthenticated = () => sessionStorage.getItem(\"User\") !== null;\n;\n  render() {\n    return (\n      <React.Fragment>\n        \n        <NavBar\n        getSearchResults={this.getSearchResults}\n         />\n        <ApplicationViews\n        populateAppState={this.populateAppState}\n        registerIt={this.registerIt}\n        getAllUsers={this.getAllUsers}\n        addUser={this.addUser} \n        searchResults={this.state.searchResults}\n          searchInput={this.state.searchInput}\n          />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Plato;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Plato from './components/Plato'\nimport Octicon from 'react-octicon'\n//import {HashRouter} from \"react-router-dom\"\n//import { Navbar, Nav,  NavDropdown, Button, Form, FormControl } from 'react-bootstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport './index.css'\n\nReactDOM.render(\n    <Router>\n        <Plato />\n    </Router>\n    , document.getElementById('root'))"],"sourceRoot":""}